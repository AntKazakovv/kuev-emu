{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0","program":"/home/kazakov/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rusqlite","--edition=2018","/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bundled\"","-C","metadata=c476c6ab8dd2feab","-C","extra-filename=-c476c6ab8dd2feab","--out-dir","/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps","-L","dependency=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps","--extern","bitflags=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/libbitflags-217c3325f1eff011.rmeta","--extern","fallible_iterator=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/libfallible_iterator-7bcaa6841b1a09b3.rmeta","--extern","fallible_streaming_iterator=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/libfallible_streaming_iterator-d9a0f13394b2cc0b.rmeta","--extern","libsqlite3_sys=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/liblibsqlite3_sys-5ef1a937e2bc3ff3.rmeta","--extern","lru_cache=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/liblru_cache-f9da164643bbbbc7.rmeta","--extern","memchr=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/libmemchr-b3c780dfbf5ffd05.rmeta","--extern","time=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/libtime-72dd59970b6c203d.rmeta","--cap-lints","allow","-L","native=/home/kazakov/code/Rust/kuev-emu/target/rls/debug/build/libsqlite3-sys-b62c8cbe76153279/out","--error-format=json","--sysroot","/home/kazakov/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kazakov/code/Rust/kuev-emu/target/rls/debug/deps/librusqlite-c476c6ab8dd2feab.rmeta"},"prelude":{"crate_id":{"name":"rusqlite","disambiguator":[1121458916279985002,18335665933738650284]},"crate_root":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src","external_crates":[{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6528836112941390771,2028724122443642861]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14673858572786541001,1892137737928154225]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17117278319981904138,16406771668640906211]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11917984669602857069,6489053565454986112]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12362109612685904499,382626321872987168]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4151571022625212401,1888722734493896023]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4322023011642103678,14222697504055880771]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8420579222726968489,9136630199856205157]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13745492306750544571,5475822973716876235]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[14030493773096865675,2651053314204399788]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[8310449678941769819,14748581810882876583]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[17983290995241619958,6056021938633518527]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[2836549575564442446,8627689666430273126]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7274711288869898279,15671112109327640352]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":15,"id":{"name":"libsqlite3_sys","disambiguator":[13373225033754730851,17758265047162707517]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","num":16,"id":{"name":"lru_cache","disambiguator":[17449123635531639776,7059522925327770565]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","num":17,"id":{"name":"linked_hash_map","disambiguator":[2338188053214421811,62691985004639161]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","num":18,"id":{"name":"fallible_iterator","disambiguator":[9800211235007137628,5924616360207591269]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","num":19,"id":{"name":"fallible_streaming_iterator","disambiguator":[4733732432733310425,17381926117215327213]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/time.rs","num":20,"id":{"name":"time","disambiguator":[12448340031871861432,1280293662094160171]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/time.rs","num":21,"id":{"name":"libc","disambiguator":[2464148898575845515,17830619535778915198]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":22,"id":{"name":"bitflags","disambiguator":[381175081479133518,10994153786536176848]}},{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","num":23,"id":{"name":"memchr","disambiguator":[6323769988047452132,9841468738183113509]}}],"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":0,"byte_end":56039,"line_start":1,"line_end":1686,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1711,"byte_end":1725,"line_start":58,"line_end":58,"column_start":9,"column_end":23},"alias_span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1729,"byte_end":1732,"line_start":58,"line_end":58,"column_start":27,"column_end":30},"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":113},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2204,"byte_end":2219,"line_start":78,"line_end":78,"column_start":23,"column_end":38},"alias_span":null,"name":"CachedStatement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2244,"byte_end":2250,"line_start":79,"line_end":79,"column_start":24,"column_end":30},"alias_span":null,"name":"Column","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":871},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2274,"byte_end":2279,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":116},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2301,"byte_end":2310,"line_start":81,"line_end":81,"column_start":21,"column_end":30},"alias_span":null,"name":"ErrorCode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":404},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2481,"byte_end":2492,"line_start":86,"line_end":86,"column_start":22,"column_end":33},"alias_span":null,"name":"AndThenRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2494,"byte_end":2504,"line_start":86,"line_end":86,"column_start":35,"column_end":45},"alias_span":null,"name":"MappedRows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":429},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2506,"byte_end":2509,"line_start":86,"line_end":86,"column_start":47,"column_end":50},"alias_span":null,"name":"Row","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":445},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2511,"byte_end":2519,"line_start":86,"line_end":86,"column_start":52,"column_end":60},"alias_span":null,"name":"RowIndex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":359},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2521,"byte_end":2525,"line_start":86,"line_end":86,"column_start":62,"column_end":66},"alias_span":null,"name":"Rows","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2555,"byte_end":2564,"line_start":87,"line_end":87,"column_start":28,"column_end":37},"alias_span":null,"name":"Statement","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":944},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2566,"byte_end":2581,"line_start":87,"line_end":87,"column_start":39,"column_end":54},"alias_span":null,"name":"StatementStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":985},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2613,"byte_end":2625,"line_start":88,"line_end":88,"column_start":30,"column_end":42},"alias_span":null,"name":"DropBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":554},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2627,"byte_end":2636,"line_start":88,"line_end":88,"column_start":44,"column_end":53},"alias_span":null,"name":"Savepoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2638,"byte_end":2649,"line_start":88,"line_end":88,"column_start":55,"column_end":66},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":975},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2651,"byte_end":2670,"line_start":88,"line_end":88,"column_start":68,"column_end":87},"alias_span":null,"name":"TransactionBehavior","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2695,"byte_end":2700,"line_start":89,"line_end":89,"column_start":23,"column_end":28},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2726,"byte_end":2727,"line_start":90,"line_end":90,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":637},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196410,"byte_end":196417,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"FromSql","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":1012},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196419,"byte_end":196431,"line_start":51,"line_end":51,"column_start":35,"column_end":47},"alias_span":null,"name":"FromSqlError","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":635},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196433,"byte_end":196446,"line_start":51,"line_end":51,"column_start":49,"column_end":62},"alias_span":null,"name":"FromSqlResult","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196472,"byte_end":196477,"line_start":52,"line_end":52,"column_start":24,"column_end":29},"alias_span":null,"name":"ToSql","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":1041},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196479,"byte_end":196490,"line_start":52,"line_end":52,"column_start":31,"column_end":42},"alias_span":null,"name":"ToSqlOutput","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":1109},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196514,"byte_end":196519,"line_start":53,"line_end":53,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":611}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196546,"byte_end":196554,"line_start":54,"line_end":54,"column_start":26,"column_end":34},"alias_span":null,"name":"ValueRef","value":"","parent":{"krate":0,"index":611}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":0,"byte_end":56039,"line_start":1,"line_end":1686,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":77},{"krate":0,"index":98},{"krate":0,"index":138},{"krate":0,"index":174},{"krate":0,"index":205},{"krate":0,"index":265},{"krate":0,"index":316},{"krate":0,"index":345},{"krate":0,"index":451},{"krate":0,"index":549},{"krate":0,"index":611},{"krate":0,"index":776},{"krate":0,"index":781},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":1197},{"krate":0,"index":1209},{"krate":0,"index":1206},{"krate":0,"index":804},{"krate":0,"index":810},{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":817},{"krate":0,"index":858},{"krate":0,"index":1211},{"krate":0,"index":1233},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1224},{"krate":0,"index":1218},{"krate":0,"index":1216},{"krate":0,"index":1213},{"krate":0,"index":1234},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1290},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":870}],"decl_id":null,"docs":" Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to\n expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","sig":null,"attributes":[{"value":"! Rusqlite is an ergonomic wrapper for using SQLite from Rust. It attempts to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! expose an interface similar to [rust-postgres](https://github.com/sfackler/rust-postgres).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":80,"byte_end":174,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":175,"byte_end":178,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":179,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":12}},{"value":"! use rusqlite::{params, Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":191,"byte_end":238,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"! use time::Timespec;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":239,"byte_end":262,"line_start":6,"line_end":6,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":263,"byte_end":266,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! #[derive(Debug)]","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":267,"byte_end":287,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"! struct Person {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":288,"byte_end":307,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"!     id: i32,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":308,"byte_end":324,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"!     name: String,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":325,"byte_end":346,"line_start":11,"line_end":11,"column_start":1,"column_end":22}},{"value":"!     time_created: Timespec,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":347,"byte_end":378,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"!     data: Option<Vec<u8>>,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":379,"byte_end":409,"line_start":13,"line_end":13,"column_start":1,"column_end":31}},{"value":"! }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":410,"byte_end":415,"line_start":14,"line_end":14,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":416,"byte_end":419,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! fn main() -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":420,"byte_end":449,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"!     let conn = Connection::open_in_memory()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":450,"byte_end":499,"line_start":17,"line_end":17,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":500,"byte_end":503,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"!     conn.execute(","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":504,"byte_end":525,"line_start":19,"line_end":19,"column_start":1,"column_end":22}},{"value":"!         \"CREATE TABLE person (","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":526,"byte_end":560,"line_start":20,"line_end":20,"column_start":1,"column_end":35}},{"value":"!                   id              INTEGER PRIMARY KEY,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":561,"byte_end":619,"line_start":21,"line_end":21,"column_start":1,"column_end":59}},{"value":"!                   name            TEXT NOT NULL,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":620,"byte_end":672,"line_start":22,"line_end":22,"column_start":1,"column_end":53}},{"value":"!                   time_created    TEXT NOT NULL,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":673,"byte_end":725,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"!                   data            BLOB","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":726,"byte_end":768,"line_start":24,"line_end":24,"column_start":1,"column_end":43}},{"value":"!                   )\",","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":769,"byte_end":794,"line_start":25,"line_end":25,"column_start":1,"column_end":26}},{"value":"!         params![],","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":795,"byte_end":817,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"!     )?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":818,"byte_end":829,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"!     let me = Person {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":830,"byte_end":855,"line_start":28,"line_end":28,"column_start":1,"column_end":26}},{"value":"!         id: 0,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":856,"byte_end":874,"line_start":29,"line_end":29,"column_start":1,"column_end":19}},{"value":"!         name: \"Steven\".to_string(),","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":875,"byte_end":914,"line_start":30,"line_end":30,"column_start":1,"column_end":40}},{"value":"!         time_created: time::get_time(),","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":915,"byte_end":958,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"!         data: None,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":959,"byte_end":982,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"!     };","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":983,"byte_end":993,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"!     conn.execute(","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":994,"byte_end":1015,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"!         \"INSERT INTO person (name, time_created, data)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1016,"byte_end":1074,"line_start":35,"line_end":35,"column_start":1,"column_end":59}},{"value":"!                   VALUES (?1, ?2, ?3)\",","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1075,"byte_end":1118,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"!         params![me.name, me.time_created, me.data],","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1119,"byte_end":1174,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"!     )?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1175,"byte_end":1186,"line_start":38,"line_end":38,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1187,"byte_end":1190,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"!     let mut stmt = conn.prepare(\"SELECT id, name, time_created, data FROM person\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1191,"byte_end":1279,"line_start":40,"line_end":40,"column_start":1,"column_end":89}},{"value":"!     let person_iter = stmt.query_map(params![], |row| {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1280,"byte_end":1339,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"!         Ok(Person {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1340,"byte_end":1363,"line_start":42,"line_end":42,"column_start":1,"column_end":24}},{"value":"!             id: row.get(0)?,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1364,"byte_end":1396,"line_start":43,"line_end":43,"column_start":1,"column_end":33}},{"value":"!             name: row.get(1)?,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1397,"byte_end":1431,"line_start":44,"line_end":44,"column_start":1,"column_end":35}},{"value":"!             time_created: row.get(2)?,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1432,"byte_end":1474,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"!             data: row.get(3)?,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1475,"byte_end":1509,"line_start":46,"line_end":46,"column_start":1,"column_end":35}},{"value":"!         })","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1510,"byte_end":1524,"line_start":47,"line_end":47,"column_start":1,"column_end":15}},{"value":"!     })?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1525,"byte_end":1537,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1538,"byte_end":1541,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"!     for person in person_iter {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1542,"byte_end":1577,"line_start":50,"line_end":50,"column_start":1,"column_end":36}},{"value":"!         println!(\"Found person {:?}\", person.unwrap());","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1578,"byte_end":1637,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"!     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1638,"byte_end":1647,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"!     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1648,"byte_end":1662,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1663,"byte_end":1668,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1669,"byte_end":1676,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"allow(unknown_lints)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":1677,"byte_end":1701,"line_start":56,"line_end":56,"column_start":1,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":872},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56399,"byte_end":56412,"line_start":15,"line_end":15,"column_start":5,"column_end":18},"name":"SqliteFailure","qualname":"::error::Error::SqliteFailure","value":"Error::SqliteFailure(ffi::Error, Option<String>)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" An error from an underlying SQLite call.\n","sig":null,"attributes":[{"value":"/ An error from an underlying SQLite call.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56350,"byte_end":56394,"line_start":14,"line_end":14,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":876},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56577,"byte_end":56601,"line_start":19,"line_end":19,"column_start":5,"column_end":29},"name":"SqliteSingleThreadedMode","qualname":"::error::Error::SqliteSingleThreadedMode","value":"Error::SqliteSingleThreadedMode","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error reported when attempting to open a connection when SQLite was\n configured to allow single-threaded use only.\n","sig":null,"attributes":[{"value":"/ Error reported when attempting to open a connection when SQLite was","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56447,"byte_end":56518,"line_start":17,"line_end":17,"column_start":5,"column_end":76}},{"value":"/ configured to allow single-threaded use only.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56523,"byte_end":56572,"line_start":18,"line_end":18,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":878},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56737,"byte_end":56761,"line_start":23,"line_end":23,"column_start":5,"column_end":29},"name":"FromSqlConversionFailure","qualname":"::error::Error::FromSqlConversionFailure","value":"Error::FromSqlConversionFailure(usize, Type, Box<dyn error::Error + Send + Sync>)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but it cannot\n be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but it cannot","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56608,"byte_end":56683,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ be converted to the requested Rust type.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56688,"byte_end":56732,"line_start":22,"line_end":22,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":883},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57087,"byte_end":57110,"line_start":29,"line_end":29,"column_start":5,"column_end":28},"name":"IntegralValueOutOfRange","qualname":"::error::Error::IntegralValueOutOfRange","value":"Error::IntegralValueOutOfRange(usize, i64)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when SQLite gives us an integral value outside the range of the\n requested type (e.g., trying to get the value 1000 into a `u8`).\n The associated `usize` is the column index,\n and the associated `i64` is the value returned by SQLite.\n","sig":null,"attributes":[{"value":"/ Error when SQLite gives us an integral value outside the range of the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56818,"byte_end":56891,"line_start":25,"line_end":25,"column_start":5,"column_end":78}},{"value":"/ requested type (e.g., trying to get the value 1000 into a `u8`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56896,"byte_end":56964,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ The associated `usize` is the column index,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56969,"byte_end":57016,"line_start":27,"line_end":27,"column_start":5,"column_end":52}},{"value":"/ and the associated `i64` is the value returned by SQLite.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57021,"byte_end":57082,"line_start":28,"line_end":28,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":887},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57173,"byte_end":57182,"line_start":32,"line_end":32,"column_start":5,"column_end":14},"name":"Utf8Error","qualname":"::error::Error::Utf8Error","value":"Error::Utf8Error(str::Utf8Error)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error converting a string to UTF-8.\n","sig":null,"attributes":[{"value":"/ Error converting a string to UTF-8.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57129,"byte_end":57168,"line_start":31,"line_end":31,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":890},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57310,"byte_end":57318,"line_start":36,"line_end":36,"column_start":5,"column_end":13},"name":"NulError","qualname":"::error::Error::NulError","value":"Error::NulError(::std::ffi::NulError)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error converting a string to a C-compatible string because it contained\n an embedded nul.\n","sig":null,"attributes":[{"value":"/ Error converting a string to a C-compatible string because it contained","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57205,"byte_end":57280,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ an embedded nul.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57285,"byte_end":57305,"line_start":35,"line_end":35,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":893},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57454,"byte_end":57474,"line_start":40,"line_end":40,"column_start":5,"column_end":25},"name":"InvalidParameterName","qualname":"::error::Error::InvalidParameterName","value":"Error::InvalidParameterName(String)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when using SQL named parameters and passing a parameter name not\n present in the SQL.\n","sig":null,"attributes":[{"value":"/ Error when using SQL named parameters and passing a parameter name not","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57347,"byte_end":57421,"line_start":38,"line_end":38,"column_start":5,"column_end":79}},{"value":"/ present in the SQL.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57426,"byte_end":57449,"line_start":39,"line_end":39,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":896},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57539,"byte_end":57550,"line_start":43,"line_end":43,"column_start":5,"column_end":16},"name":"InvalidPath","qualname":"::error::Error::InvalidPath","value":"Error::InvalidPath(PathBuf)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error converting a file path to a string.\n","sig":null,"attributes":[{"value":"/ Error converting a file path to a string.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57489,"byte_end":57534,"line_start":42,"line_end":42,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":899},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57626,"byte_end":57648,"line_start":46,"line_end":46,"column_start":5,"column_end":27},"name":"ExecuteReturnedResults","qualname":"::error::Error::ExecuteReturnedResults","value":"Error::ExecuteReturnedResults","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error returned when an `execute` call returns rows.\n","sig":null,"attributes":[{"value":"/ Error returned when an `execute` call returns rows.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57566,"byte_end":57621,"line_start":45,"line_end":45,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":901},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57779,"byte_end":57798,"line_start":50,"line_end":50,"column_start":5,"column_end":24},"name":"QueryReturnedNoRows","qualname":"::error::Error::QueryReturnedNoRows","value":"Error::QueryReturnedNoRows","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when a query that was expected to return at least one row (e.g.,\n for `query_row`) did not return any.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to return at least one row (e.g.,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57655,"byte_end":57729,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ for `query_row`) did not return any.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57734,"byte_end":57774,"line_start":49,"line_end":49,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":903},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57928,"byte_end":57946,"line_start":54,"line_end":54,"column_start":5,"column_end":23},"name":"InvalidColumnIndex","qualname":"::error::Error::InvalidColumnIndex","value":"Error::InvalidColumnIndex(usize)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the index\n is out of range for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the index","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57805,"byte_end":57880,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ is out of range for the statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57885,"byte_end":57923,"line_start":53,"line_end":53,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":906},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58079,"byte_end":58096,"line_start":58,"line_end":58,"column_start":5,"column_end":22},"name":"InvalidColumnName","qualname":"::error::Error::InvalidColumnName","value":"Error::InvalidColumnName(String)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when the value of a named column is requested, but no column\n matches the name for the statement.\n","sig":null,"attributes":[{"value":"/ Error when the value of a named column is requested, but no column","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":57960,"byte_end":58030,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ matches the name for the statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58035,"byte_end":58074,"line_start":57,"line_end":57,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":909},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58283,"byte_end":58300,"line_start":63,"line_end":63,"column_start":5,"column_end":22},"name":"InvalidColumnType","qualname":"::error::Error::InvalidColumnType","value":"Error::InvalidColumnType(usize, String, Type)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when the value of a particular column is requested, but the type\n of the result in that column cannot be converted to the requested\n Rust type.\n","sig":null,"attributes":[{"value":"/ Error when the value of a particular column is requested, but the type","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58111,"byte_end":58185,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ of the result in that column cannot be converted to the requested","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58190,"byte_end":58259,"line_start":61,"line_end":61,"column_start":5,"column_end":74}},{"value":"/ Rust type.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58264,"byte_end":58278,"line_start":62,"line_end":62,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":914},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58434,"byte_end":58454,"line_start":67,"line_end":67,"column_start":5,"column_end":25},"name":"StatementChangedRows","qualname":"::error::Error::StatementChangedRows","value":"Error::StatementChangedRows(usize)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when a query that was expected to insert one row did not insert\n any or insert many.\n","sig":null,"attributes":[{"value":"/ Error when a query that was expected to insert one row did not insert","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58328,"byte_end":58401,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ any or insert many.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":58406,"byte_end":58429,"line_start":66,"line_end":66,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":917},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59178,"byte_end":59200,"line_start":85,"line_end":85,"column_start":5,"column_end":27},"name":"ToSqlConversionFailure","qualname":"::error::Error::ToSqlConversionFailure","value":"Error::ToSqlConversionFailure(Box<dyn error::Error + Send + Sync>)","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error available for the implementors of the `ToSql` trait.\n","sig":null,"attributes":[{"value":"/ Error available for the implementors of the `ToSql` trait.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59111,"byte_end":59173,"line_start":84,"line_end":84,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":920},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59308,"byte_end":59320,"line_start":88,"line_end":88,"column_start":5,"column_end":17},"name":"InvalidQuery","qualname":"::error::Error::InvalidQuery","value":"Error::InvalidQuery","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when the SQL is not a `SELECT`, is not read-only.\n","sig":null,"attributes":[{"value":"/ Error when the SQL is not a `SELECT`, is not read-only.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59244,"byte_end":59303,"line_start":87,"line_end":87,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":922},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59830,"byte_end":59847,"line_start":105,"line_end":105,"column_start":5,"column_end":22},"name":"MultipleStatement","qualname":"::error::Error::MultipleStatement","value":"Error::MultipleStatement","parent":{"krate":0,"index":871},"children":[],"decl_id":null,"docs":" Error when the SQL contains multiple statements.\n","sig":null,"attributes":[{"value":"/ Error when the SQL contains multiple statements.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59773,"byte_end":59825,"line_start":104,"line_end":104,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":871},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56338,"byte_end":56343,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{SqliteFailure, SqliteSingleThreadedMode, FromSqlConversionFailure, IntegralValueOutOfRange, Utf8Error, NulError, InvalidParameterName, InvalidPath, ExecuteReturnedResults, QueryReturnedNoRows, InvalidColumnIndex, InvalidColumnName, InvalidColumnType, StatementChangedRows, ToSqlConversionFailure, InvalidQuery, MultipleStatement}","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":876},{"krate":0,"index":878},{"krate":0,"index":883},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":901},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":920},{"krate":0,"index":922}],"decl_id":null,"docs":" Enum listing possible errors from rusqlite.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from rusqlite.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56227,"byte_end":56274,"line_start":10,"line_end":10,"column_start":1,"column_end":48}},{"value":"allow(clippy :: enum_variant_names)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":56292,"byte_end":56328,"line_start":12,"line_end":12,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71744,"byte_end":71756,"line_start":23,"line_end":23,"column_start":12,"column_end":24},"name":"busy_timeout","qualname":"<Connection>::busy_timeout","value":"fn (&self, timeout: Duration) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a busy handler that sleeps for a specified amount of time when a\n table is locked. The handler will sleep multiple times until at\n least \"ms\" milliseconds of sleeping have accumulated.","sig":null,"attributes":[{"value":"/ Set a busy handler that sleeps for a specified amount of time when a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71157,"byte_end":71229,"line_start":12,"line_end":12,"column_start":5,"column_end":77}},{"value":"/ table is locked. The handler will sleep multiple times until at","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71234,"byte_end":71301,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/ least \"ms\" milliseconds of sleeping have accumulated.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71306,"byte_end":71363,"line_start":14,"line_end":14,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71368,"byte_end":71371,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ Calling this routine with an argument equal to zero turns off all busy","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71376,"byte_end":71450,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ handlers.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71455,"byte_end":71468,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71473,"byte_end":71476,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler for a particular database","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71481,"byte_end":71550,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ connection at any given moment. If another busy handler was defined","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71555,"byte_end":71626,"line_start":20,"line_end":20,"column_start":5,"column_end":76}},{"value":"/ (using `busy_handler`) prior to calling this routine, that other","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71631,"byte_end":71699,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ busy handler is cleared.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71704,"byte_end":71732,"line_start":22,"line_end":22,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":73033,"byte_end":73045,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"busy_handler","qualname":"<Connection>::busy_handler","value":"fn (&self, callback: Option<fn(i32) -> bool>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Register a callback to handle `SQLITE_BUSY` errors.","sig":null,"attributes":[{"value":"/ Register a callback to handle `SQLITE_BUSY` errors.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72047,"byte_end":72102,"line_start":32,"line_end":32,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72107,"byte_end":72110,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ If the busy callback is `None`, then `SQLITE_BUSY is returned","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72115,"byte_end":72180,"line_start":34,"line_end":34,"column_start":5,"column_end":70}},{"value":"/ immediately upon encountering the lock.` The argument to the busy","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72185,"byte_end":72254,"line_start":35,"line_end":35,"column_start":5,"column_end":74}},{"value":"/ handler callback is the number of times that the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72259,"byte_end":72311,"line_start":36,"line_end":36,"column_start":5,"column_end":57}},{"value":"/ busy handler has been invoked previously for the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72316,"byte_end":72368,"line_start":37,"line_end":37,"column_start":5,"column_end":57}},{"value":"/ same locking event. If the busy callback returns `false`, then no","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72373,"byte_end":72442,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ additional attempts are made to access the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72447,"byte_end":72493,"line_start":39,"line_end":39,"column_start":5,"column_end":51}},{"value":"/ database and `SQLITE_BUSY` is returned to the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72498,"byte_end":72547,"line_start":40,"line_end":40,"column_start":5,"column_end":54}},{"value":"/ application. If the callback returns `true`, then another attempt","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72552,"byte_end":72621,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ is made to access the database and the cycle repeats.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72626,"byte_end":72683,"line_start":42,"line_end":42,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72688,"byte_end":72691,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ There can only be a single busy handler defined for each database","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72696,"byte_end":72765,"line_start":44,"line_end":44,"column_start":5,"column_end":74}},{"value":"/ connection. Setting a new busy handler clears any previously set","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72770,"byte_end":72838,"line_start":45,"line_end":45,"column_start":5,"column_end":73}},{"value":"/ handler. Note that calling `busy_timeout()` or evaluating `PRAGMA","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72843,"byte_end":72912,"line_start":46,"line_end":46,"column_start":5,"column_end":74}},{"value":"/ busy_timeout=N` will change the busy handler and thus","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72917,"byte_end":72974,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/ clear any previously set busy handler.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":72979,"byte_end":73021,"line_start":48,"line_end":48,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78576,"byte_end":78590,"line_start":36,"line_end":36,"column_start":12,"column_end":26},"name":"prepare_cached","qualname":"<Connection>::prepare_cached","value":"fn (&self, sql: &str) -> Result<CachedStatement<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution, returning a previously prepared\n (but not currently in-use) statement if one is available. The\n returned statement will be cached for reuse by future calls to\n `prepare_cached` once it is dropped.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution, returning a previously prepared","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77489,"byte_end":77563,"line_start":10,"line_end":10,"column_start":5,"column_end":79}},{"value":"/ (but not currently in-use) statement if one is available. The","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77568,"byte_end":77633,"line_start":11,"line_end":11,"column_start":5,"column_end":70}},{"value":"/ returned statement will be cached for reuse by future calls to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77638,"byte_end":77704,"line_start":12,"line_end":12,"column_start":5,"column_end":71}},{"value":"/ `prepare_cached` once it is dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77709,"byte_end":77749,"line_start":13,"line_end":13,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77754,"byte_end":77757,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77762,"byte_end":77780,"line_start":15,"line_end":15,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77785,"byte_end":77826,"line_start":16,"line_end":16,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77831,"byte_end":77890,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/     {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77895,"byte_end":77904,"line_start":18,"line_end":18,"column_start":5,"column_end":14}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77909,"byte_end":77997,"line_start":19,"line_end":19,"column_start":5,"column_end":93}},{"value":"/         stmt.execute(&[\"Joe Smith\"])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78002,"byte_end":78044,"line_start":20,"line_end":20,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78049,"byte_end":78058,"line_start":21,"line_end":21,"column_start":5,"column_end":14}},{"value":"/     {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78063,"byte_end":78072,"line_start":22,"line_end":22,"column_start":5,"column_end":14}},{"value":"/         // This will return the same underlying SQLite statement handle without","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78077,"byte_end":78160,"line_start":23,"line_end":23,"column_start":5,"column_end":88}},{"value":"/         // having to prepare it again.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78165,"byte_end":78207,"line_start":24,"line_end":24,"column_start":5,"column_end":47}},{"value":"/         let mut stmt = conn.prepare_cached(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78212,"byte_end":78300,"line_start":25,"line_end":25,"column_start":5,"column_end":93}},{"value":"/         stmt.execute(&[\"Bob Jones\"])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78305,"byte_end":78347,"line_start":26,"line_end":26,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78352,"byte_end":78361,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78366,"byte_end":78380,"line_start":28,"line_end":28,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78385,"byte_end":78390,"line_start":29,"line_end":29,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78395,"byte_end":78402,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78407,"byte_end":78410,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78415,"byte_end":78428,"line_start":32,"line_end":32,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78433,"byte_end":78436,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78441,"byte_end":78516,"line_start":34,"line_end":34,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78521,"byte_end":78564,"line_start":35,"line_end":35,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79017,"byte_end":79054,"line_start":45,"line_end":45,"column_start":12,"column_end":49},"name":"set_prepared_statement_cache_capacity","qualname":"<Connection>::set_prepared_statement_cache_capacity","value":"fn (&self, capacity: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of cached prepared statements this connection\n will hold. By default, a connection will hold a relatively small\n number of cached statements. If you need more, or know that you\n will not use cached statements, you\n can set the capacity manually using this method.\n","sig":null,"attributes":[{"value":"/ Set the maximum number of cached prepared statements this connection","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78687,"byte_end":78759,"line_start":40,"line_end":40,"column_start":5,"column_end":77}},{"value":"/ will hold. By default, a connection will hold a relatively small","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78764,"byte_end":78832,"line_start":41,"line_end":41,"column_start":5,"column_end":73}},{"value":"/ number of cached statements. If you need more, or know that you","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78837,"byte_end":78904,"line_start":42,"line_end":42,"column_start":5,"column_end":72}},{"value":"/ will not use cached statements, you","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78909,"byte_end":78948,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ can set the capacity manually using this method.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":78953,"byte_end":79005,"line_start":44,"line_end":44,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79213,"byte_end":79243,"line_start":50,"line_end":50,"column_start":12,"column_end":42},"name":"flush_prepared_statement_cache","qualname":"<Connection>::flush_prepared_statement_cache","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove/finalize all prepared statements currently in the cache.\n","sig":null,"attributes":[{"value":"/ Remove/finalize all prepared statements currently in the cache.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79134,"byte_end":79201,"line_start":49,"line_end":49,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":113},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79586,"byte_end":79601,"line_start":63,"line_end":63,"column_start":12,"column_end":27},"name":"CachedStatement","qualname":"::cache::CachedStatement","value":"CachedStatement {  }","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"decl_id":null,"docs":" Cacheable statement.","sig":null,"attributes":[{"value":"/ Cacheable statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79410,"byte_end":79434,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79435,"byte_end":79438,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Statement will return automatically to the cache by default.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79439,"byte_end":79503,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/ If you want the statement to be discarded, call `discard()` on it.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79504,"byte_end":79574,"line_start":62,"line_end":62,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80569,"byte_end":80576,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"discard","qualname":"<CachedStatement>::discard","value":"fn (mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Discard the statement, preventing it from being returned to its\n `Connection`'s collection of cached statements.\n","sig":null,"attributes":[{"value":"/ Discard the statement, preventing it from being returned to its","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80434,"byte_end":80501,"line_start":99,"line_end":99,"column_start":5,"column_end":72}},{"value":"/ `Connection`'s collection of cached statements.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80506,"byte_end":80557,"line_start":100,"line_end":100,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":931},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87578,"byte_end":87584,"line_start":7,"line_end":7,"column_start":12,"column_end":18},"name":"Column","qualname":"::column::Column","value":"Column {  }","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934}],"decl_id":null,"docs":" Information about a column of a SQLite query.\n","sig":null,"attributes":[{"value":"/ Information about a column of a SQLite query.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87500,"byte_end":87549,"line_start":5,"line_end":5,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87723,"byte_end":87727,"line_start":14,"line_end":14,"column_start":12,"column_end":16},"name":"name","qualname":"<Column>::name","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the column.\n","sig":null,"attributes":[{"value":"/ Returns the name of the column.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87676,"byte_end":87711,"line_start":13,"line_end":13,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87845,"byte_end":87854,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"decl_type","qualname":"<Column>::decl_type","value":"fn (&self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the column (`None` for expression).\n","sig":null,"attributes":[{"value":"/ Returns the type of the column (`None` for expression).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87774,"byte_end":87833,"line_start":18,"line_end":18,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88022,"byte_end":88034,"line_start":26,"line_end":26,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Statement>::column_names","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names in the result set of the prepared statement.\n","sig":null,"attributes":[{"value":"/ Get all the column names in the result set of the prepared statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87937,"byte_end":88010,"line_start":25,"line_end":25,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88387,"byte_end":88399,"line_start":38,"line_end":38,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Statement>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the result set returned by the prepared\n statement.\n","sig":null,"attributes":[{"value":"/ Return the number of columns in the result set returned by the prepared","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88281,"byte_end":88356,"line_start":36,"line_end":36,"column_start":5,"column_end":80}},{"value":"/ statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88361,"byte_end":88375,"line_start":37,"line_end":37,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89038,"byte_end":89049,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Statement>::column_name","value":"fn (&self, col: usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name assigned to a particular column in the result set\n returned by the prepared statement.","sig":null,"attributes":[{"value":"/ Returns the name assigned to a particular column in the result set","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88705,"byte_end":88775,"line_start":48,"line_end":48,"column_start":5,"column_end":75}},{"value":"/ returned by the prepared statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88780,"byte_end":88819,"line_start":49,"line_end":49,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88824,"byte_end":88827,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88832,"byte_end":88846,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88851,"byte_end":88854,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88859,"byte_end":88931,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88936,"byte_end":88966,"line_start":54,"line_end":54,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88971,"byte_end":88974,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Panics when column name is not valid UTF-8.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":88979,"byte_end":89026,"line_start":56,"line_end":56,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89709,"byte_end":89721,"line_start":75,"line_end":75,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Statement>::column_index","value":"fn (&self, name: &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the column index in the result set for a given column name.","sig":null,"attributes":[{"value":"/ Returns the column index in the result set for a given column name.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89336,"byte_end":89407,"line_start":66,"line_end":66,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89412,"byte_end":89415,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If there is no AS clause then the name of the column is unspecified and","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89420,"byte_end":89495,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ may change from one release of SQLite to the next.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89500,"byte_end":89554,"line_start":69,"line_end":69,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89559,"byte_end":89562,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89567,"byte_end":89580,"line_start":71,"line_end":71,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89585,"byte_end":89588,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Will return an `Error::InvalidColumnName` when there is no column with","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89593,"byte_end":89667,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the specified `name`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":89672,"byte_end":89697,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90274,"byte_end":90281,"line_start":89,"line_end":89,"column_start":12,"column_end":19},"name":"columns","qualname":"<Statement>::columns","value":"fn (&self) -> Vec<Column>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice describing the columns of the result of the query.\n","sig":null,"attributes":[{"value":"/ Returns a slice describing the columns of the result of the query.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90192,"byte_end":90262,"line_start":88,"line_end":88,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90841,"byte_end":90853,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Rows>::column_names","value":"fn (&self) -> Option<Vec<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names.\n","sig":null,"attributes":[{"value":"/ Get all the column names.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90800,"byte_end":90829,"line_start":105,"line_end":105,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90987,"byte_end":90999,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Rows>::column_count","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns.\n","sig":null,"attributes":[{"value":"/ Return the number of columns.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90942,"byte_end":90975,"line_start":110,"line_end":110,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91130,"byte_end":91141,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Rows>::column_name","value":"fn (&self, col: usize) -> Option<Result<&str>>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the column.\n","sig":null,"attributes":[{"value":"/ Return the name of the column.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91084,"byte_end":91118,"line_start":115,"line_end":115,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91297,"byte_end":91309,"line_start":121,"line_end":121,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Rows>::column_index","value":"fn (&self, name: &str) -> Option<Result<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the column.\n","sig":null,"attributes":[{"value":"/ Return the index of the column.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91250,"byte_end":91285,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91488,"byte_end":91495,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"columns","qualname":"<Rows>::columns","value":"fn (&self) -> Option<Vec<Column>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice describing the columns of the Rows.\n","sig":null,"attributes":[{"value":"/ Returns a slice describing the columns of the Rows.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91421,"byte_end":91476,"line_start":125,"line_end":125,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91660,"byte_end":91672,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"column_names","qualname":"<Row>::column_names","value":"fn (&self) -> Vec<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get all the column names of the Row.\n","sig":null,"attributes":[{"value":"/ Get all the column names of the Row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91608,"byte_end":91648,"line_start":132,"line_end":132,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91803,"byte_end":91815,"line_start":138,"line_end":138,"column_start":12,"column_end":24},"name":"column_count","qualname":"<Row>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of columns in the current row.\n","sig":null,"attributes":[{"value":"/ Return the number of columns in the current row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91739,"byte_end":91791,"line_start":137,"line_end":137,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91924,"byte_end":91935,"line_start":143,"line_end":143,"column_start":12,"column_end":23},"name":"column_name","qualname":"<Row>::column_name","value":"fn (&self, col: usize) -> Result<&str>","parent":null,"children":[],"decl_id":null,"docs":" Return the name of the column.\n","sig":null,"attributes":[{"value":"/ Return the name of the column.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91878,"byte_end":91912,"line_start":142,"line_end":142,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":92066,"byte_end":92078,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"column_index","qualname":"<Row>::column_index","value":"fn (&self, name: &str) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the column.\n","sig":null,"attributes":[{"value":"/ Return the index of the column.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":92019,"byte_end":92054,"line_start":147,"line_end":147,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":92231,"byte_end":92238,"line_start":153,"line_end":153,"column_start":12,"column_end":19},"name":"columns","qualname":"<Row>::columns","value":"fn (&self) -> Vec<Column>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice describing the columns of the Row.\n","sig":null,"attributes":[{"value":"/ Returns a slice describing the columns of the Row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":92165,"byte_end":92219,"line_start":152,"line_end":152,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":174},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"config","qualname":"::config","value":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":202}],"decl_id":null,"docs":" Configure database connections\n","sig":null,"attributes":[{"value":"! Configure database connections","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94246,"byte_end":94280,"line_start":1,"line_end":1,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":181},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94608,"byte_end":94635,"line_start":14,"line_end":14,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_FKEY","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FKEY","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":184},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94648,"byte_end":94678,"line_start":15,"line_end":15,"column_start":5,"column_end":35},"name":"SQLITE_DBCONFIG_ENABLE_TRIGGER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_TRIGGER","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":187},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94691,"byte_end":94728,"line_start":16,"line_end":16,"column_start":5,"column_end":42},"name":"SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":190},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94803,"byte_end":94835,"line_start":18,"line_end":18,"column_start":5,"column_end":37},"name":"SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","value":"DbConfig::SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":193},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94848,"byte_end":94875,"line_start":19,"line_end":19,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_ENABLE_QPSG","qualname":"::config::DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","value":"DbConfig::SQLITE_DBCONFIG_ENABLE_QPSG","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":196},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94898,"byte_end":94925,"line_start":20,"line_end":20,"column_start":5,"column_end":32},"name":"SQLITE_DBCONFIG_TRIGGER_EQP","qualname":"::config::DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","value":"DbConfig::SQLITE_DBCONFIG_TRIGGER_EQP","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":199},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94983,"byte_end":95008,"line_start":22,"line_end":22,"column_start":5,"column_end":30},"name":"SQLITE_DBCONFIG_DEFENSIVE","qualname":"::config::DbConfig::SQLITE_DBCONFIG_DEFENSIVE","value":"DbConfig::SQLITE_DBCONFIG_DEFENSIVE","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":180},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94473,"byte_end":94481,"line_start":11,"line_end":11,"column_start":10,"column_end":18},"name":"DbConfig","qualname":"::config::DbConfig","value":"DbConfig::{SQLITE_DBCONFIG_ENABLE_FKEY, SQLITE_DBCONFIG_ENABLE_TRIGGER, SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER, SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE, SQLITE_DBCONFIG_ENABLE_QPSG, SQLITE_DBCONFIG_TRIGGER_EQP, SQLITE_DBCONFIG_DEFENSIVE}","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":199}],"decl_id":null,"docs":" Database Connection Configuration Options\n","sig":null,"attributes":[{"value":"/ Database Connection Configuration Options","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94358,"byte_end":94403,"line_start":8,"line_end":8,"column_start":1,"column_end":46}},{"value":"repr(i32)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94404,"byte_end":94416,"line_start":9,"line_end":9,"column_start":1,"column_end":13}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":94417,"byte_end":94463,"line_start":10,"line_end":10,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95899,"byte_end":95908,"line_start":40,"line_end":40,"column_start":12,"column_end":21},"name":"db_config","qualname":"<Connection>::db_config","value":"fn (&self, config: DbConfig) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current value of a `config`.","sig":null,"attributes":[{"value":"/ Returns the current value of a `config`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95042,"byte_end":95086,"line_start":26,"line_end":26,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95091,"byte_end":95094,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: return `false` or `true` to indicate","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95099,"byte_end":95170,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/   whether FK enforcement is off or on","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95175,"byte_end":95216,"line_start":29,"line_end":29,"column_start":5,"column_end":46}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: return `false` or `true` to indicate","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95221,"byte_end":95295,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/   whether triggers are disabled or enabled","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95300,"byte_end":95346,"line_start":31,"line_end":31,"column_start":5,"column_end":51}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: return `false` or `true` to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95351,"byte_end":95423,"line_start":32,"line_end":32,"column_start":5,"column_end":77}},{"value":"/   indicate whether fts3_tokenizer are disabled or enabled","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95428,"byte_end":95489,"line_start":33,"line_end":33,"column_start":5,"column_end":66}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: return `false` to indicate","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95494,"byte_end":95560,"line_start":34,"line_end":34,"column_start":5,"column_end":71}},{"value":"/   checkpoints-on-close are not disabled or `true` if they are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95565,"byte_end":95630,"line_start":35,"line_end":35,"column_start":5,"column_end":70}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: return `false` or `true` to indicate","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95635,"byte_end":95706,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/   whether the QPSG is disabled or enabled","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95711,"byte_end":95756,"line_start":37,"line_end":37,"column_start":5,"column_end":50}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: return `false` to indicate","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95761,"byte_end":95822,"line_start":38,"line_end":38,"column_start":5,"column_end":66}},{"value":"/   output-for-trigger are not disabled or `true` if it is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95827,"byte_end":95887,"line_start":39,"line_end":39,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":97015,"byte_end":97028,"line_start":68,"line_end":68,"column_start":12,"column_end":25},"name":"set_db_config","qualname":"<Connection>::set_db_config","value":"fn (&self, config: DbConfig, new_val: bool) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Make configuration changes to a database connection","sig":null,"attributes":[{"value":"/ Make configuration changes to a database connection","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96239,"byte_end":96294,"line_start":54,"line_end":54,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96299,"byte_end":96302,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FKEY: `false` to disable FK enforcement, `true`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96307,"byte_end":96383,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/   to enable FK enforcement","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96388,"byte_end":96418,"line_start":57,"line_end":57,"column_start":5,"column_end":35}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_TRIGGER: `false` to disable triggers, `true` to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96423,"byte_end":96499,"line_start":58,"line_end":58,"column_start":5,"column_end":81}},{"value":"/   enable triggers","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96504,"byte_end":96525,"line_start":59,"line_end":59,"column_start":5,"column_end":26}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_FTS3_TOKENIZER: `false` to disable","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96530,"byte_end":96593,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/   fts3_tokenizer(), `true` to enable fts3_tokenizer()","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96598,"byte_end":96655,"line_start":61,"line_end":61,"column_start":5,"column_end":62}},{"value":"/ - SQLITE_DBCONFIG_NO_CKPT_ON_CLOSE: `false` (the default) to enable","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96660,"byte_end":96731,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/   checkpoints-on-close, `true` to disable them","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96736,"byte_end":96786,"line_start":63,"line_end":63,"column_start":5,"column_end":55}},{"value":"/ - SQLITE_DBCONFIG_ENABLE_QPSG: `false` to disable the QPSG, `true` to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96791,"byte_end":96864,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/   enable QPSG","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96869,"byte_end":96886,"line_start":65,"line_end":65,"column_start":5,"column_end":22}},{"value":"/ - SQLITE_DBCONFIG_TRIGGER_EQP: `false` to disable output for trigger","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96891,"byte_end":96963,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/   programs, `true` to enable it","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":96968,"byte_end":97003,"line_start":67,"line_end":67,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118367,"byte_end":118385,"line_start":168,"line_end":168,"column_start":12,"column_end":30},"name":"pragma_query_value","qualname":"<Connection>::pragma_query_value","value":"fn <T, F> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current value of `pragma_name`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118031,"byte_end":118076,"line_start":161,"line_end":161,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118081,"byte_end":118084,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return multiple rows/values which cannot be retrieved","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118089,"byte_end":118164,"line_start":163,"line_end":163,"column_start":5,"column_end":80}},{"value":"/ with this method.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118169,"byte_end":118190,"line_start":164,"line_end":164,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118195,"byte_end":118198,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118203,"byte_end":118299,"line_start":166,"line_end":166,"column_start":5,"column_end":101}},{"value":"/ `SELECT user_version FROM pragma_user_version;`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118304,"byte_end":118355,"line_start":167,"line_end":167,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118938,"byte_end":118950,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"pragma_query","qualname":"<Connection>::pragma_query","value":"fn <F> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, mut f: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current rows/values of `pragma_name`.","sig":null,"attributes":[{"value":"/ Query the current rows/values of `pragma_name`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118719,"byte_end":118770,"line_start":182,"line_end":182,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118775,"byte_end":118778,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118783,"byte_end":118879,"line_start":184,"line_end":184,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_collation_list;`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118884,"byte_end":118926,"line_start":185,"line_end":185,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119913,"byte_end":119919,"line_start":215,"line_end":215,"column_start":12,"column_end":18},"name":"pragma","qualname":"<Connection>::pragma","value":"fn <F> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, pragma_value: &dyn ToSql, mut f: F) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Query the current value(s) of `pragma_name` associated to\n `pragma_value`.","sig":null,"attributes":[{"value":"/ Query the current value(s) of `pragma_name` associated to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119467,"byte_end":119528,"line_start":206,"line_end":206,"column_start":5,"column_end":66}},{"value":"/ `pragma_value`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119533,"byte_end":119552,"line_start":207,"line_end":207,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119557,"byte_end":119560,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method can be used with query-only pragmas which need an argument","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119565,"byte_end":119639,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ (e.g. `table_info('one_tbl')`) or pragmas which returns value(s)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119644,"byte_end":119712,"line_start":210,"line_end":210,"column_start":5,"column_end":73}},{"value":"/ (e.g. `integrity_check`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119717,"byte_end":119746,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119751,"byte_end":119754,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Prefer [PRAGMA function](https://sqlite.org/pragma.html#pragfunc) introduced in SQLite 3.20:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119759,"byte_end":119855,"line_start":213,"line_end":213,"column_start":5,"column_end":101}},{"value":"/ `SELECT * FROM pragma_table_info(?);`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":119860,"byte_end":119901,"line_start":214,"line_end":214,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":120895,"byte_end":120908,"line_start":246,"line_end":246,"column_start":12,"column_end":25},"name":"pragma_update","qualname":"<Connection>::pragma_update","value":"fn (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, pragma_value: &dyn ToSql) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name`.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":120735,"byte_end":120772,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":120777,"byte_end":120780,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ Some pragmas will return the updated value which cannot be retrieved","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":120785,"byte_end":120857,"line_start":244,"line_end":244,"column_start":5,"column_end":77}},{"value":"/ with this method.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":120862,"byte_end":120883,"line_start":245,"line_end":245,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":121585,"byte_end":121608,"line_start":265,"line_end":265,"column_start":12,"column_end":35},"name":"pragma_update_and_check","qualname":"<Connection>::pragma_update_and_check","value":"fn <F, T> (&self, schema_name: Option<DatabaseName<'_>>, pragma_name: &str, pragma_value: &dyn ToSql, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Set a new value to `pragma_name` and return the updated value.","sig":null,"attributes":[{"value":"/ Set a new value to `pragma_name` and return the updated value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":121434,"byte_end":121500,"line_start":262,"line_end":262,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":121505,"byte_end":121508,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Only few pragmas automatically return the updated value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":121513,"byte_end":121573,"line_start":264,"line_end":264,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":938},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126564,"byte_end":126576,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"RawStatement","qualname":"::raw_statement::RawStatement","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126640,"byte_end":126643,"line_start":13,"line_end":13,"column_start":12,"column_end":15},"name":"new","qualname":"<RawStatement>::new","value":"fn (stmt: *mut ffi::sqlite3_stmt, tail: bool) -> RawStatement","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126755,"byte_end":126762,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"is_null","qualname":"<RawStatement>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126830,"byte_end":126833,"line_start":21,"line_end":21,"column_start":19,"column_end":22},"name":"ptr","qualname":"<RawStatement>::ptr","value":"fn (&self) -> *mut ffi::sqlite3_stmt","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126902,"byte_end":126914,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"column_count","qualname":"<RawStatement>::column_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":127013,"byte_end":127024,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"column_type","qualname":"<RawStatement>::column_type","value":"fn (&self, idx: usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":127139,"byte_end":127154,"line_start":33,"line_end":33,"column_start":12,"column_end":27},"name":"column_decltype","qualname":"<RawStatement>::column_decltype","value":"fn (&self, idx: usize) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":127456,"byte_end":127467,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"column_name","qualname":"<RawStatement>::column_name","value":"fn (&self, idx: usize) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":128070,"byte_end":128074,"line_start":61,"line_end":61,"column_start":12,"column_end":16},"name":"step","qualname":"<RawStatement>::step","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":128708,"byte_end":128713,"line_start":82,"line_end":82,"column_start":12,"column_end":17},"name":"reset","qualname":"<RawStatement>::reset","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":128796,"byte_end":128816,"line_start":86,"line_end":86,"column_start":12,"column_end":32},"name":"bind_parameter_count","qualname":"<RawStatement>::bind_parameter_count","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":128923,"byte_end":128943,"line_start":90,"line_end":90,"column_start":12,"column_end":32},"name":"bind_parameter_index","qualname":"<RawStatement>::bind_parameter_index","value":"fn (&self, name: &CStr) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129172,"byte_end":129186,"line_start":98,"line_end":98,"column_start":12,"column_end":26},"name":"clear_bindings","qualname":"<RawStatement>::clear_bindings","value":"fn (&self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129278,"byte_end":129281,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"sql","qualname":"<RawStatement>::sql","value":"fn (&self) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129470,"byte_end":129478,"line_start":110,"line_end":110,"column_start":12,"column_end":20},"name":"finalize","qualname":"<RawStatement>::finalize","value":"fn (mut self) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129723,"byte_end":129731,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"readonly","qualname":"<RawStatement>::readonly","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"bundled\")","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129684,"byte_end":129711,"line_start":120,"line_end":120,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129894,"byte_end":129906,"line_start":127,"line_end":127,"column_start":19,"column_end":31},"name":"expanded_sql","qualname":"<RawStatement>::expanded_sql","value":"fn (&self) -> Option<&CStr>","parent":null,"children":[],"decl_id":null,"docs":" `CStr` must be freed\n","sig":null,"attributes":[{"value":"/ `CStr` must be freed","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129819,"byte_end":129843,"line_start":125,"line_end":125,"column_start":5,"column_end":29}},{"value":"cfg(feature = \"bundled\")","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":129848,"byte_end":129875,"line_start":126,"line_end":126,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":130113,"byte_end":130123,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"get_status","qualname":"<RawStatement>::get_status","value":"fn (&self, status: StatementStatus, reset: bool) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":130313,"byte_end":130321,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"has_tail","qualname":"<RawStatement>::has_tail","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":359},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":130735,"byte_end":130739,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Rows","qualname":"::row::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" An handle for the resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An handle for the resulting rows of a query.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":130675,"byte_end":130723,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131666,"byte_end":131670,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"next","qualname":"<Rows>::next","value":"fn (&mut self) -> Result<Option<&Row<'stmt>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to get the next row from the query. Returns `Ok(Some(Row))` if\n there is another row, `Err(...)` if there was an error\n getting the next row, and `Ok(None)` if all rows have been retrieved.","sig":null,"attributes":[{"value":"/ Attempt to get the next row from the query. Returns `Ok(Some(Row))` if","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":130981,"byte_end":131055,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/ there is another row, `Err(...)` if there was an error","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131060,"byte_end":131118,"line_start":22,"line_end":22,"column_start":5,"column_end":63}},{"value":"/ getting the next row, and `Ok(None)` if all rows have been retrieved.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131123,"byte_end":131196,"line_start":23,"line_end":23,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131201,"byte_end":131204,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131209,"byte_end":131220,"line_start":25,"line_end":25,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131225,"byte_end":131228,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This interface is not compatible with Rust's `Iterator` trait, because","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131233,"byte_end":131307,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ the lifetime of the returned row is tied to the lifetime of `self`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131312,"byte_end":131383,"line_start":28,"line_end":28,"column_start":5,"column_end":76}},{"value":"/ This is a fallible \"streaming iterator\". For a more natural interface,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131388,"byte_end":131462,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ consider using `query_map` or `query_and_then` instead, which","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131467,"byte_end":131532,"line_start":30,"line_end":30,"column_start":5,"column_end":70}},{"value":"/ return types that implement `Iterator`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131537,"byte_end":131580,"line_start":31,"line_end":31,"column_start":5,"column_end":48}},{"value":"allow(clippy :: should_implement_trait)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131585,"byte_end":131625,"line_start":32,"line_end":32,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131784,"byte_end":131787,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"map","qualname":"<Rows>::map","value":"fn <F, B> (self, f: F) -> Map<'stmt, F>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132398,"byte_end":132401,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"Map","qualname":"::row::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132828,"byte_end":132838,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"MappedRows","qualname":"::row::MappedRows","value":"MappedRows {  }","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132758,"byte_end":132816,"line_start":88,"line_end":88,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":404},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133541,"byte_end":133552,"line_start":120,"line_end":120,"column_start":12,"column_end":23},"name":"AndThenRows","qualname":"::row::AndThenRows","value":"AndThenRows {  }","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"decl_id":null,"docs":" An iterator over the mapped resulting rows of a query, with an Error type\n unifying with Error.\n","sig":null,"attributes":[{"value":"/ An iterator over the mapped resulting rows of a query, with an Error type","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133427,"byte_end":133504,"line_start":118,"line_end":118,"column_start":1,"column_end":78}},{"value":"/ unifying with Error.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133505,"byte_end":133529,"line_start":119,"line_end":119,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":429},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135124,"byte_end":135127,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"Row","qualname":"::row::Row","value":"Row {  }","parent":null,"children":[{"krate":0,"index":431}],"decl_id":null,"docs":" A single result row of a query.\n","sig":null,"attributes":[{"value":"/ A single result row of a query.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135077,"byte_end":135112,"line_start":184,"line_end":184,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135684,"byte_end":135694,"line_start":202,"line_end":202,"column_start":12,"column_end":22},"name":"get_unwrap","qualname":"<Row>::get_unwrap","value":"fn <I, T> (&self, idx: I) -> T","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135215,"byte_end":135274,"line_start":190,"line_end":190,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135279,"byte_end":135282,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135287,"byte_end":135301,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135306,"byte_end":135309,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Panics if calling `row.get(idx)` would return an error,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135314,"byte_end":135373,"line_start":194,"line_end":194,"column_start":5,"column_end":64}},{"value":"/ including:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135378,"byte_end":135392,"line_start":195,"line_end":195,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135397,"byte_end":135400,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ * If the underlying SQLite column type is not a valid type as a source","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135405,"byte_end":135479,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/   for `T`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135484,"byte_end":135497,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/ * If the underlying SQLite integral value is outside the range","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135502,"byte_end":135568,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/   representable by `T`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135573,"byte_end":135599,"line_start":200,"line_end":200,"column_start":5,"column_end":31}},{"value":"/ * If `idx` is outside the range of columns in the returned query","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135604,"byte_end":135672,"line_start":201,"line_end":201,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136490,"byte_end":136493,"line_start":222,"line_end":222,"column_start":12,"column_end":15},"name":"get","qualname":"<Row>::get","value":"fn <I, T> (&self, idx: I) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135784,"byte_end":135843,"line_start":206,"line_end":206,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135848,"byte_end":135851,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135856,"byte_end":135870,"line_start":208,"line_end":208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135875,"byte_end":135878,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnType` if the underlying SQLite column","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135883,"byte_end":135956,"line_start":210,"line_end":210,"column_start":5,"column_end":78}},{"value":"/ type is not a valid type as a source for `T`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135961,"byte_end":136010,"line_start":211,"line_end":211,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136015,"byte_end":136018,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136023,"byte_end":136095,"line_start":213,"line_end":213,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136100,"byte_end":136130,"line_start":214,"line_end":214,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136135,"byte_end":136138,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136143,"byte_end":136215,"line_start":216,"line_end":216,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136220,"byte_end":136242,"line_start":217,"line_end":217,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136247,"byte_end":136250,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the result type is i128 (which requires the `i128_blob` feature to be","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136255,"byte_end":136331,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ enabled), and the underlying SQLite column is a blob whose size is not","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136336,"byte_end":136410,"line_start":220,"line_end":220,"column_start":5,"column_end":79}},{"value":"/ 16 bytes, `Error::InvalidColumnType` will also be returned.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":136415,"byte_end":136478,"line_start":221,"line_end":221,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138311,"byte_end":138326,"line_start":265,"line_end":265,"column_start":12,"column_end":27},"name":"get_raw_checked","qualname":"<Row>::get_raw_checked","value":"fn <I> (&self, idx: I) -> Result<ValueRef<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":137626,"byte_end":137701,"line_start":250,"line_end":250,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":137706,"byte_end":137764,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":137769,"byte_end":137772,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":137777,"byte_end":137852,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":137857,"byte_end":137929,"line_start":254,"line_end":254,"column_start":5,"column_end":77}},{"value":"/ it can be somewhat difficult to use, and most callers will be better","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":137934,"byte_end":138006,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ served by `get` or `get`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138011,"byte_end":138040,"line_start":256,"line_end":256,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138045,"byte_end":138048,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138053,"byte_end":138067,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138072,"byte_end":138075,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnIndex` if `idx` is outside the valid","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138080,"byte_end":138152,"line_start":260,"line_end":260,"column_start":5,"column_end":77}},{"value":"/ column range for this row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138157,"byte_end":138187,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138192,"byte_end":138195,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Returns an `Error::InvalidColumnName` if `idx` is not a valid column","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138200,"byte_end":138272,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ name for this row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138277,"byte_end":138299,"line_start":264,"line_end":264,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139386,"byte_end":139393,"line_start":289,"line_end":289,"column_start":12,"column_end":19},"name":"get_raw","qualname":"<Row>::get_raw","value":"fn <I> (&self, idx: I) -> ValueRef<'_>","parent":null,"children":[],"decl_id":null,"docs":" Get the value of a particular column of the result row as a `ValueRef`,\n allowing data to be read out of a row without copying.","sig":null,"attributes":[{"value":"/ Get the value of a particular column of the result row as a `ValueRef`,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138697,"byte_end":138772,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ allowing data to be read out of a row without copying.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138777,"byte_end":138835,"line_start":275,"line_end":275,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138840,"byte_end":138843,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ This `ValueRef` is valid only as long as this Row, which is enforced by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138848,"byte_end":138923,"line_start":277,"line_end":277,"column_start":5,"column_end":80}},{"value":"/ it's lifetime. This means that while this method is completely safe,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":138928,"byte_end":139000,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/ it can be difficult to use, and most callers will be better served by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139005,"byte_end":139078,"line_start":279,"line_end":279,"column_start":5,"column_end":78}},{"value":"/ `get` or `get`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139083,"byte_end":139102,"line_start":280,"line_end":280,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139107,"byte_end":139110,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139115,"byte_end":139129,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139134,"byte_end":139137,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Panics if calling `row.get_raw_checked(idx)` would return an error,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139142,"byte_end":139213,"line_start":284,"line_end":284,"column_start":5,"column_end":76}},{"value":"/ including:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139218,"byte_end":139232,"line_start":285,"line_end":285,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139237,"byte_end":139240,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ * If `idx` is outside the range of columns in the returned query.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139245,"byte_end":139314,"line_start":287,"line_end":287,"column_start":5,"column_end":74}},{"value":"/ * If `idx` is not a valid column name for this row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139319,"byte_end":139374,"line_start":288,"line_end":288,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":445},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139573,"byte_end":139581,"line_start":295,"line_end":295,"column_start":11,"column_end":19},"name":"RowIndex","qualname":"::row::RowIndex","value":"RowIndex","parent":null,"children":[{"krate":0,"index":446}],"decl_id":null,"docs":" A trait implemented by types that can index into columns of a row.\n","sig":null,"attributes":[{"value":"/ A trait implemented by types that can index into columns of a row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139492,"byte_end":139562,"line_start":294,"line_end":294,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139688,"byte_end":139691,"line_start":298,"line_end":298,"column_start":8,"column_end":11},"name":"idx","qualname":"::row::RowIndex::idx","value":"fn (&self, stmt: &Statement<'_>) -> Result<usize>","parent":{"krate":0,"index":445},"children":[],"decl_id":null,"docs":" Returns the index of the appropriate column, or `None` if no such\n column exists.\n","sig":null,"attributes":[{"value":"/ Returns the index of the appropriate column, or `None` if no such","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139588,"byte_end":139657,"line_start":296,"line_end":296,"column_start":5,"column_end":74}},{"value":"/ column exists.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":139662,"byte_end":139680,"line_start":297,"line_end":297,"column_start":5,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140686,"byte_end":140695,"line_start":19,"line_end":19,"column_start":12,"column_end":21},"name":"Statement","qualname":"::statement::Statement","value":"Statement {  }","parent":null,"children":[{"krate":0,"index":486},{"krate":0,"index":487}],"decl_id":null,"docs":" A prepared statement.\n","sig":null,"attributes":[{"value":"/ A prepared statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140649,"byte_end":140674,"line_start":18,"line_end":18,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141576,"byte_end":141583,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"execute","qualname":"<Statement>::execute","value":"fn <P> (&mut self, params: P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement.","sig":null,"attributes":[{"value":"/ Execute the prepared statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140797,"byte_end":140832,"line_start":25,"line_end":25,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140837,"byte_end":140840,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140845,"byte_end":140920,"line_start":27,"line_end":27,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140925,"byte_end":140961,"line_start":28,"line_end":28,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140966,"byte_end":140969,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140974,"byte_end":140988,"line_start":30,"line_end":30,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140993,"byte_end":140996,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141001,"byte_end":141019,"line_start":32,"line_end":32,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141024,"byte_end":141065,"line_start":33,"line_end":33,"column_start":5,"column_end":46}},{"value":"/ fn update_rows(conn: &Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141070,"byte_end":141123,"line_start":34,"line_end":34,"column_start":5,"column_end":58}},{"value":"/     let mut stmt = conn.prepare(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141128,"byte_end":141209,"line_start":35,"line_end":35,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141214,"byte_end":141217,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/     stmt.execute(&[1i32])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141222,"byte_end":141253,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/     stmt.execute(&[2i32])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141258,"byte_end":141289,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141294,"byte_end":141297,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141302,"byte_end":141316,"line_start":40,"line_end":40,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141321,"byte_end":141326,"line_start":41,"line_end":41,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141331,"byte_end":141338,"line_start":42,"line_end":42,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141343,"byte_end":141346,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141351,"byte_end":141364,"line_start":44,"line_end":44,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141369,"byte_end":141372,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141377,"byte_end":141450,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141455,"byte_end":141526,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141531,"byte_end":141564,"line_start":48,"line_end":48,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143245,"byte_end":143258,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Statement>::execute_named","value":"fn (&mut self, params: &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s). If any\n parameters that were in the prepared statement are not included in\n `params`, they will continue to use the most-recently bound value\n from a previous call to `execute_named`, or `NULL` if they have\n never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s). If any","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141786,"byte_end":141852,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ parameters that were in the prepared statement are not included in","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141857,"byte_end":141927,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ `params`, they will continue to use the most-recently bound value","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":141932,"byte_end":142001,"line_start":60,"line_end":60,"column_start":5,"column_end":74}},{"value":"/ from a previous call to `execute_named`, or `NULL` if they have","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142006,"byte_end":142073,"line_start":61,"line_end":61,"column_start":5,"column_end":72}},{"value":"/ never been bound.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142078,"byte_end":142099,"line_start":62,"line_end":62,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142104,"byte_end":142107,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142112,"byte_end":142187,"line_start":64,"line_end":64,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142192,"byte_end":142228,"line_start":65,"line_end":65,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142233,"byte_end":142236,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142241,"byte_end":142255,"line_start":67,"line_end":67,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142260,"byte_end":142263,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142268,"byte_end":142286,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142291,"byte_end":142332,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142337,"byte_end":142388,"line_start":71,"line_end":71,"column_start":5,"column_end":56}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (name) VALUES (:name)\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142393,"byte_end":142472,"line_start":72,"line_end":72,"column_start":5,"column_end":84}},{"value":"/     stmt.execute_named(&[(\":name\", &\"one\")])","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142477,"byte_end":142525,"line_start":73,"line_end":73,"column_start":5,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142530,"byte_end":142535,"line_start":74,"line_end":74,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142540,"byte_end":142547,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142552,"byte_end":142555,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params` macro is provided for syntactic convenience,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142560,"byte_end":142633,"line_start":77,"line_end":77,"column_start":5,"column_end":78}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142638,"byte_end":142692,"line_start":78,"line_end":78,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142697,"byte_end":142700,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142705,"byte_end":142723,"line_start":80,"line_end":80,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142728,"byte_end":142783,"line_start":81,"line_end":81,"column_start":5,"column_end":60}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142788,"byte_end":142839,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO test (name) VALUES (:name)\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142844,"byte_end":142923,"line_start":83,"line_end":83,"column_start":5,"column_end":84}},{"value":"/     stmt.execute_named(named_params!{\":name\": \"one\"})","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142928,"byte_end":142985,"line_start":84,"line_end":84,"column_start":5,"column_end":62}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":142990,"byte_end":142995,"line_start":85,"line_end":85,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143000,"byte_end":143007,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143012,"byte_end":143015,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143020,"byte_end":143033,"line_start":88,"line_end":88,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143038,"byte_end":143041,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails, the executed statement","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143046,"byte_end":143119,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ returns rows (in which case `query` should be used instead), or the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143124,"byte_end":143195,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143200,"byte_end":143233,"line_start":92,"line_end":92,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143949,"byte_end":143955,"line_start":111,"line_end":111,"column_start":12,"column_end":18},"name":"insert","qualname":"<Statement>::insert","value":"fn <P> (&mut self, params: P) -> Result<i64>","parent":null,"children":[],"decl_id":null,"docs":" Execute an INSERT and return the ROWID.","sig":null,"attributes":[{"value":"/ Execute an INSERT and return the ROWID.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143421,"byte_end":143464,"line_start":98,"line_end":98,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143469,"byte_end":143472,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143477,"byte_end":143487,"line_start":100,"line_end":100,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143492,"byte_end":143495,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This function is a convenience wrapper around `execute()` intended for","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143500,"byte_end":143574,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ queries that insert a single item. It is possible to misuse this","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143579,"byte_end":143647,"line_start":103,"line_end":103,"column_start":5,"column_end":73}},{"value":"/ function in a way that it cannot detect, such as by calling it on a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143652,"byte_end":143723,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ statement which _updates_ a single","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143728,"byte_end":143766,"line_start":105,"line_end":105,"column_start":5,"column_end":43}},{"value":"/ item rather than inserting one. Please don't do that.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143771,"byte_end":143828,"line_start":106,"line_end":106,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143833,"byte_end":143836,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143841,"byte_end":143854,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143859,"byte_end":143862,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if no row is inserted or many rows are inserted.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":143867,"byte_end":143937,"line_start":110,"line_end":110,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145156,"byte_end":145161,"line_start":150,"line_end":150,"column_start":12,"column_end":17},"name":"query","qualname":"<Statement>::query","value":"fn <P> (&mut self, params: P) -> Result<Rows<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement, returning a handle to the resulting\n rows.","sig":null,"attributes":[{"value":"/ Execute the prepared statement, returning a handle to the resulting","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144263,"byte_end":144334,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/ rows.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144339,"byte_end":144348,"line_start":124,"line_end":124,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144353,"byte_end":144356,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ Due to lifetime restricts, the rows handle returned by `query` does not","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144361,"byte_end":144436,"line_start":126,"line_end":126,"column_start":5,"column_end":80}},{"value":"/ implement the `Iterator` trait. Consider using `query_map` or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144441,"byte_end":144506,"line_start":127,"line_end":127,"column_start":5,"column_end":70}},{"value":"/ `query_and_then` instead, which do.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144511,"byte_end":144550,"line_start":128,"line_end":128,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144555,"byte_end":144558,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144563,"byte_end":144577,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144582,"byte_end":144585,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144590,"byte_end":144608,"line_start":132,"line_end":132,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, NO_PARAMS};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144613,"byte_end":144665,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144670,"byte_end":144730,"line_start":134,"line_end":134,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144735,"byte_end":144799,"line_start":135,"line_end":135,"column_start":5,"column_end":69}},{"value":"/     let mut rows = stmt.query(NO_PARAMS)?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144804,"byte_end":144850,"line_start":136,"line_end":136,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144855,"byte_end":144858,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144863,"byte_end":144898,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144903,"byte_end":144947,"line_start":139,"line_end":139,"column_start":5,"column_end":49}},{"value":"/         names.push(row.get(0)?);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144952,"byte_end":144988,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":144993,"byte_end":145002,"line_start":141,"line_end":141,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145007,"byte_end":145010,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145015,"byte_end":145032,"line_start":143,"line_end":143,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145037,"byte_end":145042,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145047,"byte_end":145054,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145059,"byte_end":145062,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145067,"byte_end":145081,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145086,"byte_end":145089,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145094,"byte_end":145144,"line_start":149,"line_end":149,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146849,"byte_end":146860,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"query_named","qualname":"<Statement>::query_named","value":"fn (&mut self, params: &[(&str, &dyn ToSql)]) -> Result<Rows<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning a\n handle for the resulting rows. If any parameters that were in the\n prepared statement are not included in `params`, they will continue\n to use the most-recently bound value from a previous\n call to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145382,"byte_end":145453,"line_start":160,"line_end":160,"column_start":5,"column_end":76}},{"value":"/ handle for the resulting rows. If any parameters that were in the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145458,"byte_end":145527,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"/ prepared statement are not included in `params`, they will continue","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145532,"byte_end":145603,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ to use the most-recently bound value from a previous","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145608,"byte_end":145664,"line_start":163,"line_end":163,"column_start":5,"column_end":61}},{"value":"/ call to `query_named`, or `NULL` if they have never been bound.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145669,"byte_end":145736,"line_start":164,"line_end":164,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145741,"byte_end":145744,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145749,"byte_end":145763,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145768,"byte_end":145771,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145776,"byte_end":145794,"line_start":168,"line_end":168,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145799,"byte_end":145840,"line_start":169,"line_end":169,"column_start":5,"column_end":46}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145845,"byte_end":145892,"line_start":170,"line_end":170,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145897,"byte_end":145975,"line_start":171,"line_end":171,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query_named(&[(\":name\", &\"one\")])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":145980,"byte_end":146043,"line_start":172,"line_end":172,"column_start":5,"column_end":68}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146048,"byte_end":146092,"line_start":173,"line_end":173,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146097,"byte_end":146115,"line_start":174,"line_end":174,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146120,"byte_end":146129,"line_start":175,"line_end":175,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146134,"byte_end":146148,"line_start":176,"line_end":176,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146153,"byte_end":146158,"line_start":177,"line_end":177,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146163,"byte_end":146170,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146175,"byte_end":146178,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note, the `named_params!` macro is provided for syntactic convenience,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146183,"byte_end":146257,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ and so the above example could also be written as:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146262,"byte_end":146316,"line_start":181,"line_end":181,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146321,"byte_end":146324,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146329,"byte_end":146347,"line_start":183,"line_end":183,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, named_params};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146352,"byte_end":146407,"line_start":184,"line_end":184,"column_start":5,"column_end":60}},{"value":"/ fn query(conn: &Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146412,"byte_end":146459,"line_start":185,"line_end":185,"column_start":5,"column_end":52}},{"value":"/     let mut stmt = conn.prepare(\"SELECT * FROM test where name = :name\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146464,"byte_end":146542,"line_start":186,"line_end":186,"column_start":5,"column_end":83}},{"value":"/     let mut rows = stmt.query_named(named_params!{ \":name\": \"one\" })?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146547,"byte_end":146621,"line_start":187,"line_end":187,"column_start":5,"column_end":79}},{"value":"/     while let Some(row) = rows.next()? {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146626,"byte_end":146670,"line_start":188,"line_end":188,"column_start":5,"column_end":49}},{"value":"/         // ...","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146675,"byte_end":146693,"line_start":189,"line_end":189,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146698,"byte_end":146707,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146712,"byte_end":146726,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146731,"byte_end":146736,"line_start":192,"line_end":192,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146741,"byte_end":146748,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146753,"byte_end":146756,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146761,"byte_end":146774,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146779,"byte_end":146782,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":146787,"byte_end":146837,"line_start":197,"line_end":197,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147799,"byte_end":147808,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"query_map","qualname":"<Statement>::query_map","value":"fn <T, P, F> (&mut self, params: P, f: F) -> Result<MappedRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, returning an iterator over the mapped function results.","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147041,"byte_end":147115,"line_start":204,"line_end":204,"column_start":5,"column_end":79}},{"value":"/ rows, returning an iterator over the mapped function results.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147120,"byte_end":147185,"line_start":205,"line_end":205,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147190,"byte_end":147193,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147198,"byte_end":147212,"line_start":207,"line_end":207,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147217,"byte_end":147220,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147225,"byte_end":147243,"line_start":209,"line_end":209,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result, NO_PARAMS};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147248,"byte_end":147300,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147305,"byte_end":147365,"line_start":211,"line_end":211,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147370,"byte_end":147434,"line_start":212,"line_end":212,"column_start":5,"column_end":69}},{"value":"/     let rows = stmt.query_map(NO_PARAMS, |row| row.get(0))?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147439,"byte_end":147503,"line_start":213,"line_end":213,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147508,"byte_end":147511,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147516,"byte_end":147551,"line_start":215,"line_end":215,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147556,"byte_end":147589,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147594,"byte_end":147631,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147636,"byte_end":147645,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147650,"byte_end":147653,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147658,"byte_end":147675,"line_start":220,"line_end":220,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147680,"byte_end":147685,"line_start":221,"line_end":221,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147690,"byte_end":147697,"line_start":222,"line_end":222,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147702,"byte_end":147705,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147710,"byte_end":147724,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147729,"byte_end":147732,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":147737,"byte_end":147787,"line_start":226,"line_end":226,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149114,"byte_end":149129,"line_start":264,"line_end":264,"column_start":12,"column_end":27},"name":"query_map_named","qualname":"<Statement>::query_map_named","value":"fn <T, F> (&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<MappedRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in `params`, they will continue to use the\n most-recently bound value from a previous call to `query_named`,\n or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148069,"byte_end":148141,"line_start":237,"line_end":237,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148146,"byte_end":148215,"line_start":238,"line_end":238,"column_start":5,"column_end":74}},{"value":"/ query's rows. If any parameters that were in the prepared statement","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148220,"byte_end":148291,"line_start":239,"line_end":239,"column_start":5,"column_end":76}},{"value":"/ are not included in `params`, they will continue to use the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148296,"byte_end":148359,"line_start":240,"line_end":240,"column_start":5,"column_end":68}},{"value":"/ most-recently bound value from a previous call to `query_named`,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148364,"byte_end":148432,"line_start":241,"line_end":241,"column_start":5,"column_end":73}},{"value":"/ or `NULL` if they have never been bound.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148437,"byte_end":148481,"line_start":242,"line_end":242,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148486,"byte_end":148489,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148494,"byte_end":148508,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148513,"byte_end":148516,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148521,"byte_end":148539,"line_start":246,"line_end":246,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148544,"byte_end":148585,"line_start":247,"line_end":247,"column_start":5,"column_end":46}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<String>> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148590,"byte_end":148650,"line_start":248,"line_end":248,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148655,"byte_end":148734,"line_start":249,"line_end":249,"column_start":5,"column_end":84}},{"value":"/     let rows = stmt.query_map_named(&[(\":id\", &\"one\")], |row| row.get(0))?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148739,"byte_end":148818,"line_start":250,"line_end":250,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148823,"byte_end":148826,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/     let mut names = Vec::new();","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148831,"byte_end":148866,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/     for name_result in rows {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148871,"byte_end":148904,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/         names.push(name_result?);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148909,"byte_end":148946,"line_start":254,"line_end":254,"column_start":5,"column_end":42}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148951,"byte_end":148960,"line_start":255,"line_end":255,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148965,"byte_end":148968,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/     Ok(names)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148973,"byte_end":148990,"line_start":257,"line_end":257,"column_start":5,"column_end":22}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":148995,"byte_end":149000,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149005,"byte_end":149012,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149017,"byte_end":149020,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149025,"byte_end":149039,"line_start":261,"line_end":261,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149044,"byte_end":149047,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149052,"byte_end":149102,"line_start":263,"line_end":263,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149717,"byte_end":149731,"line_start":283,"line_end":283,"column_start":12,"column_end":26},"name":"query_and_then","qualname":"<Statement>::query_and_then","value":"fn <T, E, P, F> (&mut self, params: P, f: F) -> Result<AndThenRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Executes the prepared statement and maps a function over the resulting\n rows, where the function returns a `Result` with `Error` type\n implementing `std::convert::From<Error>` (so errors can be unified).","sig":null,"attributes":[{"value":"/ Executes the prepared statement and maps a function over the resulting","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149395,"byte_end":149469,"line_start":276,"line_end":276,"column_start":5,"column_end":79}},{"value":"/ rows, where the function returns a `Result` with `Error` type","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149474,"byte_end":149539,"line_start":277,"line_end":277,"column_start":5,"column_end":70}},{"value":"/ implementing `std::convert::From<Error>` (so errors can be unified).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149544,"byte_end":149616,"line_start":278,"line_end":278,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149621,"byte_end":149624,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149629,"byte_end":149642,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149647,"byte_end":149650,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":149655,"byte_end":149705,"line_start":282,"line_end":282,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151367,"byte_end":151387,"line_start":332,"line_end":332,"column_start":12,"column_end":32},"name":"query_and_then_named","qualname":"<Statement>::query_and_then_named","value":"fn <T, E, F> (&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<AndThenRows<'_, F>>","parent":null,"children":[],"decl_id":null,"docs":" Execute the prepared statement with named parameter(s), returning an\n iterator over the result of calling the mapping function over the\n query's rows. If any parameters that were in the prepared statement\n are not included in\n `params`, they will\n continue to use the most-recently bound value from a previous call\n to `query_named`, or `NULL` if they have never been bound.","sig":null,"attributes":[{"value":"/ Execute the prepared statement with named parameter(s), returning an","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150041,"byte_end":150113,"line_start":294,"line_end":294,"column_start":5,"column_end":77}},{"value":"/ iterator over the result of calling the mapping function over the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150118,"byte_end":150187,"line_start":295,"line_end":295,"column_start":5,"column_end":74}},{"value":"/ query's rows. If any parameters that were in the prepared statement","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150192,"byte_end":150263,"line_start":296,"line_end":296,"column_start":5,"column_end":76}},{"value":"/ are not included in","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150268,"byte_end":150291,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/ `params`, they will","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150296,"byte_end":150319,"line_start":298,"line_end":298,"column_start":5,"column_end":28}},{"value":"/ continue to use the most-recently bound value from a previous call","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150324,"byte_end":150394,"line_start":299,"line_end":299,"column_start":5,"column_end":75}},{"value":"/ to `query_named`, or `NULL` if they have never been bound.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150399,"byte_end":150461,"line_start":300,"line_end":300,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150466,"byte_end":150469,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150474,"byte_end":150488,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150493,"byte_end":150496,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150501,"byte_end":150519,"line_start":304,"line_end":304,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150524,"byte_end":150565,"line_start":305,"line_end":305,"column_start":5,"column_end":46}},{"value":"/ struct Person {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150570,"byte_end":150589,"line_start":306,"line_end":306,"column_start":5,"column_end":24}},{"value":"/     name: String,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150594,"byte_end":150615,"line_start":307,"line_end":307,"column_start":5,"column_end":26}},{"value":"/ };","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150620,"byte_end":150626,"line_start":308,"line_end":308,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150631,"byte_end":150634,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ fn name_to_person(name: String) -> Result<Person> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150639,"byte_end":150694,"line_start":310,"line_end":310,"column_start":5,"column_end":60}},{"value":"/     // ... check for valid name","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150699,"byte_end":150734,"line_start":311,"line_end":311,"column_start":5,"column_end":40}},{"value":"/     Ok(Person { name: name })","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150739,"byte_end":150772,"line_start":312,"line_end":312,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150777,"byte_end":150782,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150787,"byte_end":150790,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ fn get_names(conn: &Connection) -> Result<Vec<Person>> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150795,"byte_end":150855,"line_start":315,"line_end":315,"column_start":5,"column_end":65}},{"value":"/     let mut stmt = conn.prepare(\"SELECT name FROM people WHERE id = :id\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150860,"byte_end":150939,"line_start":316,"line_end":316,"column_start":5,"column_end":84}},{"value":"/     let rows =","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150944,"byte_end":150962,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"/         stmt.query_and_then_named(&[(\":id\", &\"one\")], |row| name_to_person(row.get(0)?))?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":150967,"byte_end":151061,"line_start":318,"line_end":318,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151066,"byte_end":151069,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/     let mut persons = Vec::new();","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151074,"byte_end":151111,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/     for person_result in rows {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151116,"byte_end":151151,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/         persons.push(person_result?);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151156,"byte_end":151197,"line_start":322,"line_end":322,"column_start":5,"column_end":46}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151202,"byte_end":151211,"line_start":323,"line_end":323,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151216,"byte_end":151219,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/     Ok(persons)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151224,"byte_end":151243,"line_start":325,"line_end":325,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151248,"byte_end":151253,"line_start":326,"line_end":326,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151258,"byte_end":151265,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151270,"byte_end":151273,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ## Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151278,"byte_end":151292,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151297,"byte_end":151300,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if binding parameters fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151305,"byte_end":151355,"line_start":331,"line_end":331,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151853,"byte_end":151859,"line_start":347,"line_end":347,"column_start":12,"column_end":18},"name":"exists","qualname":"<Statement>::exists","value":"fn <P> (&mut self, params: P) -> Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if a query in the SQL statement it executes returns one\n or more rows and `false` if the SQL returns an empty set.\n","sig":null,"attributes":[{"value":"/ Return `true` if a query in the SQL statement it executes returns one","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151702,"byte_end":151775,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ or more rows and `false` if the SQL returns an empty set.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":151780,"byte_end":151841,"line_start":346,"line_end":346,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152593,"byte_end":152602,"line_start":370,"line_end":370,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Statement>::query_row","value":"fn <T, P, F> (&mut self, params: P, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152085,"byte_end":152155,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152160,"byte_end":152175,"line_start":358,"line_end":358,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152180,"byte_end":152183,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152188,"byte_end":152261,"line_start":360,"line_end":360,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152266,"byte_end":152278,"line_start":361,"line_end":361,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152283,"byte_end":152286,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152291,"byte_end":152364,"line_start":363,"line_end":363,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152369,"byte_end":152441,"line_start":364,"line_end":364,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152446,"byte_end":152484,"line_start":365,"line_end":365,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152489,"byte_end":152492,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152497,"byte_end":152510,"line_start":367,"line_end":367,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152515,"byte_end":152518,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152523,"byte_end":152581,"line_start":369,"line_end":369,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153465,"byte_end":153480,"line_start":395,"line_end":395,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Statement>::query_row_named","value":"fn <T, F> (&mut self, params: &[(&str, &dyn ToSql)], f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152868,"byte_end":152941,"line_start":381,"line_end":381,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152946,"byte_end":152982,"line_start":382,"line_end":382,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152987,"byte_end":152990,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":152995,"byte_end":153068,"line_start":384,"line_end":384,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153073,"byte_end":153085,"line_start":385,"line_end":385,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153090,"byte_end":153093,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153098,"byte_end":153171,"line_start":387,"line_end":387,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153176,"byte_end":153248,"line_start":388,"line_end":388,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153253,"byte_end":153291,"line_start":389,"line_end":389,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153296,"byte_end":153299,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153304,"byte_end":153317,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153322,"byte_end":153325,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153330,"byte_end":153405,"line_start":393,"line_end":393,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153410,"byte_end":153453,"line_start":394,"line_end":394,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153983,"byte_end":153991,"line_start":412,"line_end":412,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Statement>::finalize","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the statement.","sig":null,"attributes":[{"value":"/ Consumes the statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153720,"byte_end":153747,"line_start":404,"line_end":404,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153752,"byte_end":153755,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153760,"byte_end":153828,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153833,"byte_end":153874,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153879,"byte_end":153882,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153887,"byte_end":153900,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153905,"byte_end":153908,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":153913,"byte_end":153971,"line_start":411,"line_end":411,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154297,"byte_end":154312,"line_start":422,"line_end":422,"column_start":12,"column_end":27},"name":"parameter_index","qualname":"<Statement>::parameter_index","value":"fn (&self, name: &str) -> Result<Option<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return the index of an SQL parameter given its name.","sig":null,"attributes":[{"value":"/ Return the index of an SQL parameter given its name.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154054,"byte_end":154110,"line_start":416,"line_end":416,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154115,"byte_end":154118,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154123,"byte_end":154136,"line_start":418,"line_end":418,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154141,"byte_end":154144,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Will return Err if `name` is invalid. Will return Ok(None) if the name","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154149,"byte_end":154223,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ is valid but not a bound parameter of this statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":154228,"byte_end":154285,"line_start":421,"line_end":421,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159424,"byte_end":159436,"line_start":578,"line_end":578,"column_start":12,"column_end":24},"name":"expanded_sql","qualname":"<Statement>::expanded_sql","value":"fn (&self) -> Option<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string containing the SQL text of prepared statement with\n bound parameters expanded.\n","sig":null,"attributes":[{"value":"/ Returns a string containing the SQL text of prepared statement with","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159274,"byte_end":159345,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/ bound parameters expanded.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159350,"byte_end":159380,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"cfg(feature = \"bundled\")","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159385,"byte_end":159412,"line_start":577,"line_end":577,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159887,"byte_end":159897,"line_start":592,"line_end":592,"column_start":12,"column_end":22},"name":"get_status","qualname":"<Statement>::get_status","value":"fn (&self, status: StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the value for one of the status counters for this statement.\n","sig":null,"attributes":[{"value":"/ Get the value for one of the status counters for this statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159807,"byte_end":159875,"line_start":591,"line_end":591,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":160128,"byte_end":160140,"line_start":598,"line_end":598,"column_start":12,"column_end":24},"name":"reset_status","qualname":"<Statement>::reset_status","value":"fn (&self, status: StatementStatus) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Reset the value of one of the status counters for this statement,\n returning the value it had before resetting.\n","sig":null,"attributes":[{"value":"/ Reset the value of one of the status counters for this statement,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":159994,"byte_end":160063,"line_start":596,"line_end":596,"column_start":5,"column_end":74}},{"value":"/ returning the value it had before resetting.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":160068,"byte_end":160116,"line_start":597,"line_end":597,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":945},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164193,"byte_end":164205,"line_start":729,"line_end":729,"column_start":5,"column_end":17},"name":"FullscanStep","qualname":"::statement::StatementStatus::FullscanStep","value":"StatementStatus::FullscanStep","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_FULLSCAN_STEP","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164139,"byte_end":164188,"line_start":728,"line_end":728,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":948},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164260,"byte_end":164264,"line_start":731,"line_end":731,"column_start":5,"column_end":9},"name":"Sort","qualname":"::statement::StatementStatus::Sort","value":"StatementStatus::Sort","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_SORT\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_SORT","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164215,"byte_end":164255,"line_start":730,"line_end":730,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":951},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164324,"byte_end":164333,"line_start":733,"line_end":733,"column_start":5,"column_end":14},"name":"AutoIndex","qualname":"::statement::StatementStatus::AutoIndex","value":"StatementStatus::AutoIndex","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_AUTOINDEX\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_AUTOINDEX","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164274,"byte_end":164319,"line_start":732,"line_end":732,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":954},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164391,"byte_end":164397,"line_start":735,"line_end":735,"column_start":5,"column_end":11},"name":"VmStep","qualname":"::statement::StatementStatus::VmStep","value":"StatementStatus::VmStep","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_VM_STEP\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_VM_STEP","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164343,"byte_end":164386,"line_start":734,"line_end":734,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":957},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164457,"byte_end":164466,"line_start":737,"line_end":737,"column_start":5,"column_end":14},"name":"RePrepare","qualname":"::statement::StatementStatus::RePrepare","value":"StatementStatus::RePrepare","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_REPREPARE\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_REPREPARE","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164407,"byte_end":164452,"line_start":736,"line_end":736,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":960},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164520,"byte_end":164523,"line_start":739,"line_end":739,"column_start":5,"column_end":8},"name":"Run","qualname":"::statement::StatementStatus::Run","value":"StatementStatus::Run","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_RUN\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_RUN","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164476,"byte_end":164515,"line_start":738,"line_end":738,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":963},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164581,"byte_end":164588,"line_start":741,"line_end":741,"column_start":5,"column_end":12},"name":"MemUsed","qualname":"::statement::StatementStatus::MemUsed","value":"StatementStatus::MemUsed","parent":{"krate":0,"index":944},"children":[],"decl_id":null,"docs":" Equivalent to SQLITE_STMTSTATUS_MEMUSED\n","sig":null,"attributes":[{"value":"/ Equivalent to SQLITE_STMTSTATUS_MEMUSED","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164533,"byte_end":164576,"line_start":740,"line_end":740,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":944},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164117,"byte_end":164132,"line_start":727,"line_end":727,"column_start":10,"column_end":25},"name":"StatementStatus","qualname":"::statement::StatementStatus","value":"StatementStatus::{FullscanStep, Sort, AutoIndex, VmStep, RePrepare, Run, MemUsed}","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":963}],"decl_id":null,"docs":" Prepared statement status counters.","sig":null,"attributes":[{"value":"/ Prepared statement status counters.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":163826,"byte_end":163865,"line_start":718,"line_end":718,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":163866,"byte_end":163869,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ See https://www.sqlite.org/c3ref/c_stmtstatus_counter.html","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":163870,"byte_end":163932,"line_start":720,"line_end":720,"column_start":1,"column_end":63}},{"value":"/ for explanations of each.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":163933,"byte_end":163962,"line_start":721,"line_end":721,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":163963,"byte_end":163966,"line_start":722,"line_end":722,"column_start":1,"column_end":4}},{"value":"/ Note that depending on your version of SQLite, all of these","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":163967,"byte_end":164030,"line_start":723,"line_end":723,"column_start":1,"column_end":64}},{"value":"/ may not be available.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164031,"byte_end":164056,"line_start":724,"line_end":724,"column_start":1,"column_end":26}},{"value":"repr(i32)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":164057,"byte_end":164069,"line_start":725,"line_end":725,"column_start":1,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":976},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176394,"byte_end":176402,"line_start":8,"line_end":8,"column_start":5,"column_end":13},"name":"Deferred","qualname":"::transaction::TransactionBehavior::Deferred","value":"TransactionBehavior::Deferred","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":978},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176408,"byte_end":176417,"line_start":9,"line_end":9,"column_start":5,"column_end":14},"name":"Immediate","qualname":"::transaction::TransactionBehavior::Immediate","value":"TransactionBehavior::Immediate","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":980},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176423,"byte_end":176432,"line_start":10,"line_end":10,"column_start":5,"column_end":14},"name":"Exclusive","qualname":"::transaction::TransactionBehavior::Exclusive","value":"TransactionBehavior::Exclusive","parent":{"krate":0,"index":975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":975},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176368,"byte_end":176387,"line_start":7,"line_end":7,"column_start":10,"column_end":29},"name":"TransactionBehavior","qualname":"::transaction::TransactionBehavior","value":"TransactionBehavior::{Deferred, Immediate, Exclusive}","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980}],"decl_id":null,"docs":" Options for transaction behavior. See [BEGIN\n TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.\n","sig":null,"attributes":[{"value":"/ Options for transaction behavior. See [BEGIN","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176212,"byte_end":176260,"line_start":4,"line_end":4,"column_start":1,"column_end":49}},{"value":"/ TRANSACTION](http://www.sqlite.org/lang_transaction.html) for details.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176261,"byte_end":176335,"line_start":5,"line_end":5,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":986},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176643,"byte_end":176651,"line_start":17,"line_end":17,"column_start":5,"column_end":13},"name":"Rollback","qualname":"::transaction::DropBehavior::Rollback","value":"DropBehavior::Rollback","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Roll back the changes. This is the default.\n","sig":null,"attributes":[{"value":"/ Roll back the changes. This is the default.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176591,"byte_end":176638,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":988},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176686,"byte_end":176692,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Commit","qualname":"::transaction::DropBehavior::Commit","value":"DropBehavior::Commit","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Commit the changes.\n","sig":null,"attributes":[{"value":"/ Commit the changes.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176658,"byte_end":176681,"line_start":19,"line_end":19,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":990},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176832,"byte_end":176838,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Ignore","qualname":"::transaction::DropBehavior::Ignore","value":"DropBehavior::Ignore","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Do not commit or roll back changes - this will leave the transaction or\n savepoint open, so should be used with care.\n","sig":null,"attributes":[{"value":"/ Do not commit or roll back changes - this will leave the transaction or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176699,"byte_end":176774,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ savepoint open, so should be used with care.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176779,"byte_end":176827,"line_start":23,"line_end":23,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":992},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176917,"byte_end":176922,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Panic","qualname":"::transaction::DropBehavior::Panic","value":"DropBehavior::Panic","parent":{"krate":0,"index":985},"children":[],"decl_id":null,"docs":" Panic. Used to enforce intentional behavior during development.\n","sig":null,"attributes":[{"value":"/ Panic. Used to enforce intentional behavior during development.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176845,"byte_end":176912,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":985},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176572,"byte_end":176584,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"DropBehavior","qualname":"::transaction::DropBehavior","value":"DropBehavior::{Rollback, Commit, Ignore, Panic}","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":992}],"decl_id":null,"docs":" Options for how a Transaction or Savepoint should behave when it is dropped.\n","sig":null,"attributes":[{"value":"/ Options for how a Transaction or Savepoint should behave when it is dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176437,"byte_end":176517,"line_start":13,"line_end":13,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177731,"byte_end":177742,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"Transaction","qualname":"::transaction::Transaction","value":"Transaction {  }","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008}],"decl_id":null,"docs":" Represents a transaction on a database connection.","sig":null,"attributes":[{"value":"/ Represents a transaction on a database connection.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176927,"byte_end":176981,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176982,"byte_end":176985,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176986,"byte_end":176997,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":176998,"byte_end":177001,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Transactions will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177002,"byte_end":177079,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ commit the transaction, or use `set_drop_behavior` to change what happens","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177080,"byte_end":177157,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ when the transaction is dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177158,"byte_end":177194,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177195,"byte_end":177198,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177199,"byte_end":177213,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177214,"byte_end":177217,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177218,"byte_end":177236,"line_start":40,"line_end":40,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177237,"byte_end":177278,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177279,"byte_end":177350,"line_start":42,"line_end":42,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177351,"byte_end":177422,"line_start":43,"line_end":43,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177423,"byte_end":177484,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177485,"byte_end":177522,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177523,"byte_end":177526,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177527,"byte_end":177595,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177596,"byte_end":177664,"line_start":48,"line_end":48,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177665,"byte_end":177668,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/     tx.commit()","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177669,"byte_end":177688,"line_start":50,"line_end":50,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177689,"byte_end":177694,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177695,"byte_end":177702,"line_start":52,"line_end":52,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":554},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178594,"byte_end":178603,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"Savepoint","qualname":"::transaction::Savepoint","value":"Savepoint {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"decl_id":null,"docs":" Represents a savepoint on a database connection.","sig":null,"attributes":[{"value":"/ Represents a savepoint on a database connection.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177817,"byte_end":177869,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177870,"byte_end":177873,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ## Note","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177874,"byte_end":177885,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177886,"byte_end":177889,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ Savepoints will roll back by default. Use `commit` method to explicitly","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177890,"byte_end":177965,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ commit the savepoint, or use `set_drop_behavior` to change what happens","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":177966,"byte_end":178041,"line_start":64,"line_end":64,"column_start":1,"column_end":76}},{"value":"/ when the savepoint is dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178042,"byte_end":178076,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178077,"byte_end":178080,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178081,"byte_end":178095,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178096,"byte_end":178099,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178100,"byte_end":178118,"line_start":69,"line_end":69,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178119,"byte_end":178160,"line_start":70,"line_end":70,"column_start":1,"column_end":42}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178161,"byte_end":178232,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178233,"byte_end":178304,"line_start":72,"line_end":72,"column_start":1,"column_end":72}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178305,"byte_end":178366,"line_start":73,"line_end":73,"column_start":1,"column_end":62}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178367,"byte_end":178402,"line_start":74,"line_end":74,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178403,"byte_end":178406,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178407,"byte_end":178475,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178476,"byte_end":178544,"line_start":77,"line_end":77,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178545,"byte_end":178548,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/     sp.commit()","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178549,"byte_end":178568,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178569,"byte_end":178574,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178575,"byte_end":178582,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179038,"byte_end":179041,"line_start":96,"line_end":96,"column_start":12,"column_end":15},"name":"new","qualname":"<Transaction>::new","value":"fn (conn: &mut Connection, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction. Cannot be nested; see `savepoint` for nested\n transactions.\n Even though we don't mutate the connection, we take a `&mut Connection`\n so as to prevent nested or concurrent transactions on the same\n connection.\n","sig":null,"attributes":[{"value":"/ Begin a new transaction. Cannot be nested; see `savepoint` for nested","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178760,"byte_end":178833,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ transactions.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178838,"byte_end":178855,"line_start":92,"line_end":92,"column_start":5,"column_end":22}},{"value":"/ Even though we don't mutate the connection, we take a `&mut Connection`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178860,"byte_end":178935,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ so as to prevent nested or concurrent transactions on the same","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178940,"byte_end":179006,"line_start":94,"line_end":94,"column_start":5,"column_end":71}},{"value":"/ connection.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179011,"byte_end":179026,"line_start":95,"line_end":95,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180355,"byte_end":180364,"line_start":135,"line_end":135,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Transaction>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested\n transactions.","sig":null,"attributes":[{"value":"/ Starts a new [savepoint](http://www.sqlite.org/lang_savepoint.html), allowing nested","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179518,"byte_end":179606,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/ transactions.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179611,"byte_end":179628,"line_start":109,"line_end":109,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179633,"byte_end":179636,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179641,"byte_end":179652,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179657,"byte_end":179660,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ Just like outer level transactions, savepoint transactions rollback by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179665,"byte_end":179739,"line_start":113,"line_end":113,"column_start":5,"column_end":79}},{"value":"/ default.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179744,"byte_end":179756,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179761,"byte_end":179764,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179769,"byte_end":179783,"line_start":116,"line_end":116,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179788,"byte_end":179791,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179796,"byte_end":179814,"line_start":118,"line_end":118,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179819,"byte_end":179860,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ # fn perform_queries_part_1_succeeds(_conn: &Connection) -> bool { true }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179865,"byte_end":179942,"line_start":120,"line_end":120,"column_start":5,"column_end":82}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":179947,"byte_end":180008,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"/     let mut tx = conn.transaction()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180013,"byte_end":180054,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180059,"byte_end":180062,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/     {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180067,"byte_end":180076,"line_start":124,"line_end":124,"column_start":5,"column_end":14}},{"value":"/         let sp = tx.savepoint()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180081,"byte_end":180118,"line_start":125,"line_end":125,"column_start":5,"column_end":42}},{"value":"/         if perform_queries_part_1_succeeds(&sp) {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180123,"byte_end":180176,"line_start":126,"line_end":126,"column_start":5,"column_end":58}},{"value":"/             sp.commit()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180181,"byte_end":180210,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180215,"byte_end":180228,"line_start":128,"line_end":128,"column_start":5,"column_end":18}},{"value":"/         // otherwise, sp will rollback","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180233,"byte_end":180275,"line_start":129,"line_end":129,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180280,"byte_end":180289,"line_start":130,"line_end":130,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180294,"byte_end":180297,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180302,"byte_end":180321,"line_start":132,"line_end":132,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180326,"byte_end":180331,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180336,"byte_end":180343,"line_start":134,"line_end":134,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180545,"byte_end":180564,"line_start":140,"line_end":140,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Transaction>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new savepoint with a custom savepoint name. See `savepoint()`.\n","sig":null,"attributes":[{"value":"/ Create a new savepoint with a custom savepoint name. See `savepoint()`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180458,"byte_end":180533,"line_start":139,"line_end":139,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180802,"byte_end":180815,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Transaction>::drop_behavior","value":"fn (&self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the transaction when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the transaction when it is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180699,"byte_end":180773,"line_start":144,"line_end":144,"column_start":5,"column_end":79}},{"value":"/ dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180778,"byte_end":180790,"line_start":145,"line_end":145,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180980,"byte_end":180997,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Transaction>::set_drop_behavior","value":"fn (&mut self, drop_behavior: DropBehavior) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the transaction to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the transaction to perform the specified action when it is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180879,"byte_end":180951,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":180956,"byte_end":180968,"line_start":151,"line_end":151,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181172,"byte_end":181178,"line_start":157,"line_end":157,"column_start":12,"column_end":18},"name":"commit","qualname":"<Transaction>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a transaction.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181094,"byte_end":181160,"line_start":156,"line_end":156,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181428,"byte_end":181436,"line_start":167,"line_end":167,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Transaction>::rollback","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and rolls back a transaction.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and rolls back a transaction.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181347,"byte_end":181416,"line_start":166,"line_end":166,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181870,"byte_end":181876,"line_start":181,"line_end":181,"column_start":12,"column_end":18},"name":"finish","qualname":"<Transaction>::finish","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the transaction, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the transaction, committing or rolling back according to the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181611,"byte_end":181684,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181689,"byte_end":181731,"line_start":177,"line_end":177,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181736,"byte_end":181739,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181744,"byte_end":181812,"line_start":179,"line_end":179,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":181817,"byte_end":181858,"line_start":180,"line_end":180,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183330,"byte_end":183333,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"new","qualname":"<Savepoint>::new","value":"fn (conn: &mut Connection) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint. Can be nested.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint. Can be nested.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183277,"byte_end":183318,"line_start":235,"line_end":235,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183508,"byte_end":183517,"line_start":241,"line_end":241,"column_start":12,"column_end":21},"name":"with_name","qualname":"<Savepoint>::with_name","value":"fn <T> (conn: &mut Connection, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a user-provided savepoint name.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183434,"byte_end":183496,"line_start":240,"line_end":240,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183700,"byte_end":183709,"line_start":246,"line_end":246,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Savepoint>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183659,"byte_end":183688,"line_start":245,"line_end":245,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183893,"byte_end":183912,"line_start":251,"line_end":251,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Savepoint>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a nested savepoint with a user-provided savepoint name.\n","sig":null,"attributes":[{"value":"/ Begin a nested savepoint with a user-provided savepoint name.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":183816,"byte_end":183881,"line_start":250,"line_end":250,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184161,"byte_end":184174,"line_start":257,"line_end":257,"column_start":12,"column_end":25},"name":"drop_behavior","qualname":"<Savepoint>::drop_behavior","value":"fn (&self) -> DropBehavior","parent":null,"children":[],"decl_id":null,"docs":" Get the current setting for what happens to the savepoint when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Get the current setting for what happens to the savepoint when it is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184060,"byte_end":184132,"line_start":255,"line_end":255,"column_start":5,"column_end":77}},{"value":"/ dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184137,"byte_end":184149,"line_start":256,"line_end":256,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184337,"byte_end":184354,"line_start":263,"line_end":263,"column_start":12,"column_end":29},"name":"set_drop_behavior","qualname":"<Savepoint>::set_drop_behavior","value":"fn (&mut self, drop_behavior: DropBehavior) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Configure the savepoint to perform the specified action when it is\n dropped.\n","sig":null,"attributes":[{"value":"/ Configure the savepoint to perform the specified action when it is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184238,"byte_end":184308,"line_start":261,"line_end":261,"column_start":5,"column_end":75}},{"value":"/ dropped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184313,"byte_end":184325,"line_start":262,"line_end":262,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184527,"byte_end":184533,"line_start":268,"line_end":268,"column_start":12,"column_end":18},"name":"commit","qualname":"<Savepoint>::commit","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which consumes and commits a savepoint.\n","sig":null,"attributes":[{"value":"/ A convenience method which consumes and commits a savepoint.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184451,"byte_end":184515,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184997,"byte_end":185005,"line_start":284,"line_end":284,"column_start":12,"column_end":20},"name":"rollback","qualname":"<Savepoint>::rollback","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" A convenience method which rolls back a savepoint.","sig":null,"attributes":[{"value":"/ A convenience method which rolls back a savepoint.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184758,"byte_end":184812,"line_start":278,"line_end":278,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184817,"byte_end":184820,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184825,"byte_end":184836,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184841,"byte_end":184844,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Unlike `Transaction`s, savepoints remain active after they have been","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184849,"byte_end":184921,"line_start":282,"line_end":282,"column_start":5,"column_end":77}},{"value":"/ rolled back, and can be rolled back again or committed.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":184926,"byte_end":184985,"line_start":283,"line_end":283,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185385,"byte_end":185391,"line_start":294,"line_end":294,"column_start":12,"column_end":18},"name":"finish","qualname":"<Savepoint>::finish","value":"fn (mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the savepoint, committing or rolling back according to the\n current setting (see `drop_behavior`).","sig":null,"attributes":[{"value":"/ Consumes the savepoint, committing or rolling back according to the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185128,"byte_end":185199,"line_start":289,"line_end":289,"column_start":5,"column_end":76}},{"value":"/ current setting (see `drop_behavior`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185204,"byte_end":185246,"line_start":290,"line_end":290,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185251,"byte_end":185254,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Functionally equivalent to the `Drop` implementation, but allows","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185259,"byte_end":185327,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/ callers to see any errors that occur.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185332,"byte_end":185373,"line_start":293,"line_end":293,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187078,"byte_end":187089,"line_start":352,"line_end":352,"column_start":12,"column_end":23},"name":"transaction","qualname":"<Connection>::transaction","value":"fn (&mut self) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new transaction with the default behavior (DEFERRED).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186131,"byte_end":186196,"line_start":327,"line_end":327,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186201,"byte_end":186204,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The transaction defaults to rolling back when it is dropped. If you","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186209,"byte_end":186280,"line_start":329,"line_end":329,"column_start":5,"column_end":76}},{"value":"/ want the transaction to commit, you must call `commit` or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186285,"byte_end":186346,"line_start":330,"line_end":330,"column_start":5,"column_end":66}},{"value":"/ `set_drop_behavior(DropBehavior::Commit)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186351,"byte_end":186397,"line_start":331,"line_end":331,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186402,"byte_end":186405,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186410,"byte_end":186424,"line_start":333,"line_end":333,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186429,"byte_end":186432,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186437,"byte_end":186455,"line_start":335,"line_end":335,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186460,"byte_end":186501,"line_start":336,"line_end":336,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186506,"byte_end":186577,"line_start":337,"line_end":337,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186582,"byte_end":186653,"line_start":338,"line_end":338,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186658,"byte_end":186719,"line_start":339,"line_end":339,"column_start":5,"column_end":66}},{"value":"/     let tx = conn.transaction()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186724,"byte_end":186761,"line_start":340,"line_end":340,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186766,"byte_end":186769,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186774,"byte_end":186842,"line_start":342,"line_end":342,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&tx)?; // tx causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186847,"byte_end":186915,"line_start":343,"line_end":343,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186920,"byte_end":186923,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/     tx.commit()","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186928,"byte_end":186947,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186952,"byte_end":186957,"line_start":346,"line_end":346,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186962,"byte_end":186969,"line_start":347,"line_end":347,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186974,"byte_end":186977,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186982,"byte_end":186995,"line_start":349,"line_end":349,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187000,"byte_end":187003,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187008,"byte_end":187066,"line_start":351,"line_end":351,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":607},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187401,"byte_end":187426,"line_start":363,"line_end":363,"column_start":12,"column_end":37},"name":"transaction_with_behavior","qualname":"<Connection>::transaction_with_behavior","value":"fn (&mut self, behavior: TransactionBehavior) -> Result<Transaction<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new transaction with a specified behavior.","sig":null,"attributes":[{"value":"/ Begin a new transaction with a specified behavior.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187203,"byte_end":187257,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187262,"byte_end":187265,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ See `transaction`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187270,"byte_end":187292,"line_start":358,"line_end":358,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187297,"byte_end":187300,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187305,"byte_end":187318,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187323,"byte_end":187326,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187331,"byte_end":187389,"line_start":362,"line_end":362,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188512,"byte_end":188521,"line_start":395,"line_end":395,"column_start":12,"column_end":21},"name":"savepoint","qualname":"<Connection>::savepoint","value":"fn (&mut self) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with the default behavior (DEFERRED).","sig":null,"attributes":[{"value":"/ Begin a new savepoint with the default behavior (DEFERRED).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187573,"byte_end":187636,"line_start":370,"line_end":370,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187641,"byte_end":187644,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The savepoint defaults to rolling back when it is dropped. If you want","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187649,"byte_end":187723,"line_start":372,"line_end":372,"column_start":5,"column_end":79}},{"value":"/ the savepoint to commit, you must call `commit` or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187728,"byte_end":187782,"line_start":373,"line_end":373,"column_start":5,"column_end":59}},{"value":"/ `set_drop_behavior(DropBehavior::Commit)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187787,"byte_end":187833,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187838,"byte_end":187841,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187846,"byte_end":187860,"line_start":376,"line_end":376,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187865,"byte_end":187868,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187873,"byte_end":187891,"line_start":378,"line_end":378,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187896,"byte_end":187937,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/ # fn do_queries_part_1(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":187942,"byte_end":188013,"line_start":380,"line_end":380,"column_start":5,"column_end":76}},{"value":"/ # fn do_queries_part_2(_conn: &Connection) -> Result<()> { Ok(()) }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188018,"byte_end":188089,"line_start":381,"line_end":381,"column_start":5,"column_end":76}},{"value":"/ fn perform_queries(conn: &mut Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188094,"byte_end":188155,"line_start":382,"line_end":382,"column_start":5,"column_end":66}},{"value":"/     let sp = conn.savepoint()?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188160,"byte_end":188195,"line_start":383,"line_end":383,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188200,"byte_end":188203,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/     do_queries_part_1(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188208,"byte_end":188276,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/     do_queries_part_2(&sp)?; // sp causes rollback if this fails","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188281,"byte_end":188349,"line_start":386,"line_end":386,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188354,"byte_end":188357,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/     sp.commit()","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188362,"byte_end":188381,"line_start":388,"line_end":388,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188386,"byte_end":188391,"line_start":389,"line_end":389,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188396,"byte_end":188403,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188408,"byte_end":188411,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188416,"byte_end":188429,"line_start":392,"line_end":392,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188434,"byte_end":188437,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188442,"byte_end":188500,"line_start":394,"line_end":394,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188790,"byte_end":188809,"line_start":406,"line_end":406,"column_start":12,"column_end":31},"name":"savepoint_with_name","qualname":"<Connection>::savepoint_with_name","value":"fn <T> (&mut self, name: T) -> Result<Savepoint<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Begin a new savepoint with a specified name.","sig":null,"attributes":[{"value":"/ Begin a new savepoint with a specified name.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188600,"byte_end":188648,"line_start":399,"line_end":399,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188653,"byte_end":188656,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ See `savepoint`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188661,"byte_end":188681,"line_start":401,"line_end":401,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188686,"byte_end":188689,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188694,"byte_end":188707,"line_start":403,"line_end":403,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188712,"byte_end":188715,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":188720,"byte_end":188778,"line_start":405,"line_end":405,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":611},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":660},{"krate":0,"index":682},{"krate":0,"index":719},{"krate":0,"index":743},{"krate":0,"index":1174},{"krate":0,"index":1178},{"krate":0,"index":1176},{"krate":0,"index":1179},{"krate":0,"index":1195},{"krate":0,"index":1193},{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":774}],"decl_id":null,"docs":" Traits dealing with SQLite data types.","sig":null,"attributes":[{"value":"! Traits dealing with SQLite data types.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194436,"byte_end":194478,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194479,"byte_end":194482,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! SQLite uses a [dynamic type system](https://www.sqlite.org/datatype3.html). Implementations of","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194483,"byte_end":194581,"line_start":3,"line_end":3,"column_start":1,"column_end":99}},{"value":"! the `ToSql` and `FromSql` traits are provided for the basic types that","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194582,"byte_end":194656,"line_start":4,"line_end":4,"column_start":1,"column_end":75}},{"value":"! SQLite provides methods for:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194657,"byte_end":194689,"line_start":5,"line_end":5,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194690,"byte_end":194693,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! * Integers (`i32` and `i64`; SQLite uses `i64` internally, so getting an","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194694,"byte_end":194770,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"! `i32` will truncate   if the value is too large or too small).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194771,"byte_end":194837,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"! * Reals (`f64`)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194838,"byte_end":194857,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"! * Strings (`String` and `&str`)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194858,"byte_end":194893,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"! * Blobs (`Vec<u8>` and `&[u8]`)","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194894,"byte_end":194929,"line_start":11,"line_end":11,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194930,"byte_end":194933,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! Additionally, because it is such a common data type, implementations are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":194934,"byte_end":195010,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"! provided for `time::Timespec` that use the RFC 3339 date/time format,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195011,"byte_end":195084,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"! `\"%Y-%m-%dT%H:%M:%S.%fZ\"`, to store time values as strings.  These values","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195085,"byte_end":195162,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"! can be parsed by SQLite's builtin","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195163,"byte_end":195200,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"! [datetime](https://www.sqlite.org/lang_datefunc.html) functions.  If you","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195201,"byte_end":195277,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"! want different storage for timespecs, you can use a newtype. For example, to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195278,"byte_end":195358,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"! store timespecs as `f64`s:","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195359,"byte_end":195389,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195390,"byte_end":195393,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195394,"byte_end":195405,"line_start":21,"line_end":21,"column_start":1,"column_end":12}},{"value":"! use rusqlite::types::{FromSql, FromSqlResult, ToSql, ToSqlOutput, ValueRef};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195406,"byte_end":195486,"line_start":22,"line_end":22,"column_start":1,"column_end":81}},{"value":"! use rusqlite::Result;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195487,"byte_end":195512,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195513,"byte_end":195516,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! pub struct TimespecSql(pub time::Timespec);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195517,"byte_end":195564,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195565,"byte_end":195568,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! impl FromSql for TimespecSql {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195569,"byte_end":195603,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"!     fn column_result(value: ValueRef) -> FromSqlResult<Self> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195604,"byte_end":195670,"line_start":28,"line_end":28,"column_start":1,"column_end":67}},{"value":"!         f64::column_result(value).map(|as_f64| {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195671,"byte_end":195723,"line_start":29,"line_end":29,"column_start":1,"column_end":53}},{"value":"!             TimespecSql(time::Timespec {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195724,"byte_end":195768,"line_start":30,"line_end":30,"column_start":1,"column_end":45}},{"value":"!                 sec: as_f64.trunc() as i64,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195769,"byte_end":195816,"line_start":31,"line_end":31,"column_start":1,"column_end":48}},{"value":"!                 nsec: (as_f64.fract() * 1.0e9) as i32,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195817,"byte_end":195875,"line_start":32,"line_end":32,"column_start":1,"column_end":59}},{"value":"!             })","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195876,"byte_end":195894,"line_start":33,"line_end":33,"column_start":1,"column_end":19}},{"value":"!         })","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195895,"byte_end":195909,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"!     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195910,"byte_end":195919,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195920,"byte_end":195925,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195926,"byte_end":195929,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! impl ToSql for TimespecSql {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195930,"byte_end":195962,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"!     fn to_sql(&self) -> Result<ToSqlOutput> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":195963,"byte_end":196012,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"!         let TimespecSql(ts) = *self;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196013,"byte_end":196053,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"!         let as_f64 = ts.sec as f64 + (ts.nsec as f64) / 1.0e9;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196054,"byte_end":196120,"line_start":41,"line_end":41,"column_start":1,"column_end":67}},{"value":"!         Ok(as_f64.into())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196121,"byte_end":196150,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"!     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196151,"byte_end":196160,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196161,"byte_end":196166,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196167,"byte_end":196174,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196175,"byte_end":196178,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! `ToSql` and `FromSql` are also implemented for `Option<T>` where `T`","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196179,"byte_end":196251,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"! implements `ToSql` or `FromSql` for the cases where you want to know if a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196252,"byte_end":196329,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"! value was NULL (which gets translated to `None`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196330,"byte_end":196383,"line_start":49,"line_end":49,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1013},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206082,"byte_end":206093,"line_start":10,"line_end":10,"column_start":5,"column_end":16},"name":"InvalidType","qualname":"::types::from_sql::FromSqlError::InvalidType","value":"FromSqlError::InvalidType","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Error when an SQLite value is requested, but the type of the result\n cannot be converted to the requested Rust type.\n","sig":null,"attributes":[{"value":"/ Error when an SQLite value is requested, but the type of the result","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":205950,"byte_end":206021,"line_start":8,"line_end":8,"column_start":5,"column_end":76}},{"value":"/ cannot be converted to the requested Rust type.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206026,"byte_end":206077,"line_start":9,"line_end":9,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1015},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206202,"byte_end":206212,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::types::from_sql::FromSqlError::OutOfRange","value":"FromSqlError::OutOfRange(i64)","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" Error when the i64 value returned by SQLite cannot be stored into the\n requested type.\n","sig":null,"attributes":[{"value":"/ Error when the i64 value returned by SQLite cannot be stored into the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206100,"byte_end":206173,"line_start":12,"line_end":12,"column_start":5,"column_end":78}},{"value":"/ requested type.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206178,"byte_end":206197,"line_start":13,"line_end":13,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1018},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206710,"byte_end":206715,"line_start":27,"line_end":27,"column_start":5,"column_end":10},"name":"Other","qualname":"::types::from_sql::FromSqlError::Other","value":"FromSqlError::Other(Box<dyn Error + Send + Sync>)","parent":{"krate":0,"index":1012},"children":[],"decl_id":null,"docs":" An error case available for implementors of the `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ An error case available for implementors of the `FromSql` trait.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206637,"byte_end":206705,"line_start":26,"line_end":26,"column_start":5,"column_end":73}}]},{"kind":"Enum","id":{"krate":0,"index":1012},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":205931,"byte_end":205943,"line_start":7,"line_end":7,"column_start":10,"column_end":22},"name":"FromSqlError","qualname":"::types::from_sql::FromSqlError","value":"FromSqlError::{InvalidType, OutOfRange, Other}","parent":null,"children":[{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1018}],"decl_id":null,"docs":" Enum listing possible errors from `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ Enum listing possible errors from `FromSql` trait.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":205850,"byte_end":205904,"line_start":5,"line_end":5,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":635},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208887,"byte_end":208900,"line_start":86,"line_end":86,"column_start":10,"column_end":23},"name":"FromSqlResult","qualname":"::types::from_sql::FromSqlResult","value":"Result<T, FromSqlError>","parent":null,"children":[],"decl_id":null,"docs":" Result type for implementors of the `FromSql` trait.\n","sig":null,"attributes":[{"value":"/ Result type for implementors of the `FromSql` trait.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208821,"byte_end":208877,"line_start":85,"line_end":85,"column_start":1,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":637},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209617,"byte_end":209624,"line_start":99,"line_end":99,"column_start":11,"column_end":18},"name":"FromSql","qualname":"::types::from_sql::FromSql","value":"FromSql: Sized","parent":null,"children":[{"krate":0,"index":638}],"decl_id":null,"docs":" A trait for types that can be created from a SQLite value.","sig":null,"attributes":[{"value":"/ A trait for types that can be created from a SQLite value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208932,"byte_end":208994,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208995,"byte_end":208998,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ Note that `FromSql` and `ToSql` are defined for most integral types, but","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208999,"byte_end":209075,"line_start":90,"line_end":90,"column_start":1,"column_end":77}},{"value":"/ not `u64` or `usize`. This is intentional; SQLite returns integers as","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209076,"byte_end":209149,"line_start":91,"line_end":91,"column_start":1,"column_end":74}},{"value":"/ signed 64-bit values, which cannot fully represent the range of these","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209150,"byte_end":209223,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ types. Rusqlite would have to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209224,"byte_end":209257,"line_start":93,"line_end":93,"column_start":1,"column_end":34}},{"value":"/ decide how to handle negative values: return an error or reinterpret as a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209258,"byte_end":209335,"line_start":94,"line_end":94,"column_start":1,"column_end":78}},{"value":"/ very large postive numbers, neither of which","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209336,"byte_end":209384,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/ is guaranteed to be correct for everyone. Callers can work around this by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209385,"byte_end":209462,"line_start":96,"line_end":96,"column_start":1,"column_end":78}},{"value":"/ fetching values as i64 and then doing the interpretation themselves or by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209463,"byte_end":209540,"line_start":97,"line_end":97,"column_start":1,"column_end":78}},{"value":"/ defining a newtype and implementing `FromSql`/`ToSql` for it.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209541,"byte_end":209606,"line_start":98,"line_end":98,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":638},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209641,"byte_end":209654,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"column_result","qualname":"::types::from_sql::FromSql::column_result","value":"fn (value: ValueRef<'_>) -> FromSqlResult<Self>","parent":{"krate":0,"index":637},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1043},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217509,"byte_end":217517,"line_start":12,"line_end":12,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::types::to_sql::ToSqlOutput::Borrowed","value":"ToSqlOutput::Borrowed(ValueRef<'a>)","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" A borrowed SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ A borrowed SQLite-representable value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217462,"byte_end":217504,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1046},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217583,"byte_end":217588,"line_start":15,"line_end":15,"column_start":5,"column_end":10},"name":"Owned","qualname":"::types::to_sql::ToSqlOutput::Owned","value":"ToSqlOutput::Owned(Value)","parent":{"krate":0,"index":1041},"children":[],"decl_id":null,"docs":" An owned SQLite-representable value.\n","sig":null,"attributes":[{"value":"/ An owned SQLite-representable value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217538,"byte_end":217578,"line_start":14,"line_end":14,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":1041},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217440,"byte_end":217451,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"ToSqlOutput","qualname":"::types::to_sql::ToSqlOutput","value":"ToSqlOutput::{Borrowed, Owned}","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1046}],"decl_id":null,"docs":" `ToSqlOutput` represents the possible output types for implementors of the\n `ToSql` trait.\n","sig":null,"attributes":[{"value":"/ `ToSqlOutput` represents the possible output types for implementors of the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217298,"byte_end":217376,"line_start":7,"line_end":7,"column_start":1,"column_end":79}},{"value":"/ `ToSql` trait.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217377,"byte_end":217395,"line_start":8,"line_end":8,"column_start":1,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":696},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219617,"byte_end":219622,"line_start":86,"line_end":86,"column_start":11,"column_end":16},"name":"ToSql","qualname":"::types::to_sql::ToSql","value":"ToSql","parent":null,"children":[{"krate":0,"index":697}],"decl_id":null,"docs":" A trait for types that can be converted into SQLite values.\n","sig":null,"attributes":[{"value":"/ A trait for types that can be converted into SQLite values.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219543,"byte_end":219606,"line_start":85,"line_end":85,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219632,"byte_end":219638,"line_start":87,"line_end":87,"column_start":8,"column_end":14},"name":"to_sql","qualname":"::types::to_sql::ToSql::to_sql","value":"fn (&self) -> Result<ToSqlOutput<'_>>","parent":{"krate":0,"index":696},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1110},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225092,"byte_end":225096,"line_start":10,"line_end":10,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value::Value::Null","value":"Value::Null","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225055,"byte_end":225087,"line_start":9,"line_end":9,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1112},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225141,"byte_end":225148,"line_start":12,"line_end":12,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value::Value::Integer","value":"Value::Integer(i64)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225102,"byte_end":225136,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1115},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225205,"byte_end":225209,"line_start":14,"line_end":14,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value::Value::Real","value":"Value::Real(f64)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225159,"byte_end":225200,"line_start":13,"line_end":13,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1118},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225256,"byte_end":225260,"line_start":16,"line_end":16,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value::Value::Text","value":"Value::Text(String)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225220,"byte_end":225251,"line_start":15,"line_end":15,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1121},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225310,"byte_end":225314,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value::Value::Blob","value":"Value::Blob(Vec<u8>)","parent":{"krate":0,"index":1109},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225274,"byte_end":225305,"line_start":17,"line_end":17,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1109},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225043,"byte_end":225048,"line_start":8,"line_end":8,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::value::Value","value":"Value::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":1110},{"krate":0,"index":1112},{"krate":0,"index":1115},{"krate":0,"index":1118},{"krate":0,"index":1121}],"decl_id":null,"docs":" Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically\n dictated by SQLite (not by the caller).","sig":null,"attributes":[{"value":"/ Owning [dynamic type value](http://sqlite.org/datatype3.html). Value's type is typically","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":224780,"byte_end":224872,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ dictated by SQLite (not by the caller).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":224873,"byte_end":224916,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":224917,"byte_end":224920,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ See [`ValueRef`](enum.ValueRef.html) for a non-owning dynamic type value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":224921,"byte_end":224998,"line_start":6,"line_end":6,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":227078,"byte_end":227087,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"data_type","qualname":"<Value>::data_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1146},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227751,"byte_end":227755,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::value_ref::ValueRef::Null","value":"ValueRef::Null","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" The value is a `NULL` value.\n","sig":null,"attributes":[{"value":"/ The value is a `NULL` value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227714,"byte_end":227746,"line_start":10,"line_end":10,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1148},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227800,"byte_end":227807,"line_start":13,"line_end":13,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::value_ref::ValueRef::Integer","value":"ValueRef::Integer(i64)","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" The value is a signed integer.\n","sig":null,"attributes":[{"value":"/ The value is a signed integer.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227761,"byte_end":227795,"line_start":12,"line_end":12,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1151},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227864,"byte_end":227868,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::value_ref::ValueRef::Real","value":"ValueRef::Real(f64)","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" The value is a floating point number.\n","sig":null,"attributes":[{"value":"/ The value is a floating point number.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227818,"byte_end":227859,"line_start":14,"line_end":14,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1154},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227915,"byte_end":227919,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::value_ref::ValueRef::Text","value":"ValueRef::Text(&'a [u8])","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" The value is a text string.\n","sig":null,"attributes":[{"value":"/ The value is a text string.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227879,"byte_end":227910,"line_start":16,"line_end":16,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1157},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227971,"byte_end":227975,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::value_ref::ValueRef::Blob","value":"ValueRef::Blob(&'a [u8])","parent":{"krate":0,"index":1144},"children":[],"decl_id":null,"docs":" The value is a blob of data\n","sig":null,"attributes":[{"value":"/ The value is a blob of data","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227935,"byte_end":227966,"line_start":18,"line_end":18,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":1144},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227695,"byte_end":227703,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"ValueRef","qualname":"::types::value_ref::ValueRef","value":"ValueRef::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":1146},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157}],"decl_id":null,"docs":" A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the\n memory backing this value is owned by SQLite.","sig":null,"attributes":[{"value":"/ A non-owning [dynamic type value](http://sqlite.org/datatype3.html). Typically the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227435,"byte_end":227521,"line_start":4,"line_end":4,"column_start":1,"column_end":87}},{"value":"/ memory backing this value is owned by SQLite.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227522,"byte_end":227571,"line_start":5,"line_end":5,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227572,"byte_end":227575,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`Value`](enum.Value.html) for an owning dynamic type value.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227576,"byte_end":227644,"line_start":7,"line_end":7,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228021,"byte_end":228030,"line_start":23,"line_end":23,"column_start":12,"column_end":21},"name":"data_type","qualname":"<ValueRef>::data_type","value":"fn (&self) -> Type","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228477,"byte_end":228483,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"as_i64","qualname":"<ValueRef>::as_i64","value":"fn (&self) -> FromSqlResult<i64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Integer`, returns the integral value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Integer`, returns the integral value. Otherwise,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228345,"byte_end":228416,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ returns `Err(Error::InvalidColumnType)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228421,"byte_end":228465,"line_start":36,"line_end":36,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228785,"byte_end":228791,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"as_f64","qualname":"<ValueRef>::as_f64","value":"fn (&self) -> FromSqlResult<f64>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Real`, returns the floating point value. Otherwise,\n returns `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Real`, returns the floating point value. Otherwise,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228650,"byte_end":228724,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ returns `Err(Error::InvalidColumnType)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228729,"byte_end":228773,"line_start":45,"line_end":45,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229082,"byte_end":229088,"line_start":55,"line_end":55,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ValueRef>::as_str","value":"fn (&self) -> FromSqlResult<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Text`, returns the string value. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Text`, returns the string value. Otherwise, returns","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228955,"byte_end":229029,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ `Err(Error::InvalidColumnType)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229034,"byte_end":229070,"line_start":54,"line_end":54,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229475,"byte_end":229482,"line_start":66,"line_end":66,"column_start":12,"column_end":19},"name":"as_blob","qualname":"<ValueRef>::as_blob","value":"fn (&self) -> FromSqlResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" If `self` is case `Blob`, returns the byte slice. Otherwise, returns\n `Err(Error::InvalidColumnType)`.\n","sig":null,"attributes":[{"value":"/ If `self` is case `Blob`, returns the byte slice. Otherwise, returns","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229350,"byte_end":229422,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ `Err(Error::InvalidColumnType)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229427,"byte_end":229463,"line_start":65,"line_end":65,"column_start":5,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197126,"byte_end":197130,"line_start":83,"line_end":83,"column_start":12,"column_end":16},"name":"Null","qualname":"::types::Null","value":"","parent":null,"children":[],"decl_id":null,"docs":" Empty struct that can be used to fill in a query parameter as `NULL`.","sig":null,"attributes":[{"value":"/ Empty struct that can be used to fill in a query parameter as `NULL`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196754,"byte_end":196827,"line_start":70,"line_end":70,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196828,"byte_end":196831,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196832,"byte_end":196846,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196847,"byte_end":196850,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196851,"byte_end":196869,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196870,"byte_end":196911,"line_start":75,"line_end":75,"column_start":1,"column_end":42}},{"value":"/ # use rusqlite::types::{Null};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196912,"byte_end":196946,"line_start":76,"line_end":76,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196947,"byte_end":196950,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ fn insert_null(conn: &Connection) -> Result<usize> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":196951,"byte_end":197007,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/     conn.execute(\"INSERT INTO people (name) VALUES (?)\", &[Null])","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197008,"byte_end":197077,"line_start":79,"line_end":79,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197078,"byte_end":197083,"line_start":80,"line_end":80,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197084,"byte_end":197091,"line_start":81,"line_end":81,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1180},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197188,"byte_end":197192,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Null","qualname":"::types::Type::Null","value":"Type::Null","parent":{"krate":0,"index":1179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1182},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197198,"byte_end":197205,"line_start":88,"line_end":88,"column_start":5,"column_end":12},"name":"Integer","qualname":"::types::Type::Integer","value":"Type::Integer","parent":{"krate":0,"index":1179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1184},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197211,"byte_end":197215,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Real","qualname":"::types::Type::Real","value":"Type::Real","parent":{"krate":0,"index":1179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1186},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197221,"byte_end":197225,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"Text","qualname":"::types::Type::Text","value":"Type::Text","parent":{"krate":0,"index":1179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1188},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197231,"byte_end":197235,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"Blob","qualname":"::types::Type::Blob","value":"Type::Blob","parent":{"krate":0,"index":1179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1179},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197177,"byte_end":197181,"line_start":86,"line_end":86,"column_start":10,"column_end":14},"name":"Type","qualname":"::types::Type","value":"Type::{Null, Integer, Real, Text, Blob}","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1188}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":784},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237662,"byte_end":237676,"line_start":8,"line_end":8,"column_start":8,"column_end":22},"name":"version_number","qualname":"::version::version_number","value":"fn () -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as an integer; e.g., `3016002` for version\n 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as an integer; e.g., `3016002` for version","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237478,"byte_end":237551,"line_start":4,"line_end":4,"column_start":1,"column_end":74}},{"value":"/ 3.16.2.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237552,"byte_end":237563,"line_start":5,"line_end":5,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237564,"byte_end":237567,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion_number()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237568,"byte_end":237654,"line_start":7,"line_end":7,"column_start":1,"column_end":87}}]},{"kind":"Function","id":{"krate":0,"index":785},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237911,"byte_end":237918,"line_start":15,"line_end":15,"column_start":8,"column_end":15},"name":"version","qualname":"::version::version","value":"fn () -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","sig":null,"attributes":[{"value":"/ Returns the SQLite version as a string; e.g., `\"3.16.2\"` for version 3.16.2.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237739,"byte_end":237819,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237820,"byte_end":237823,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [`sqlite3_libversion()`](https://www.sqlite.org/c3ref/libversion.html).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/version.rs","byte_start":237824,"byte_end":237903,"line_start":14,"line_end":14,"column_start":1,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":787},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":3673,"byte_end":3682,"line_start":134,"line_end":134,"column_start":11,"column_end":20},"name":"NO_PARAMS","qualname":"::NO_PARAMS","value":"&[&dyn ToSql]","parent":null,"children":[],"decl_id":null,"docs":" To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).\n","sig":null,"attributes":[{"value":"/ To be used when your statement has no [parameter](https://sqlite.org/lang_expr.html#varparam).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":3564,"byte_end":3662,"line_start":133,"line_end":133,"column_start":1,"column_end":99}}]},{"kind":"Type","id":{"krate":0,"index":790},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5582,"byte_end":5588,"line_start":207,"line_end":207,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A typedef of the result returned by many methods.\n","sig":null,"attributes":[{"value":"/ A typedef of the result returned by many methods.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5519,"byte_end":5572,"line_start":206,"line_end":206,"column_start":1,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":792},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5687,"byte_end":5704,"line_start":210,"line_end":210,"column_start":11,"column_end":28},"name":"OptionalExtension","qualname":"::OptionalExtension","value":"OptionalExtension<T>","parent":null,"children":[{"krate":0,"index":794}],"decl_id":null,"docs":" See the [method documentation](#tymethod.optional).\n","sig":null,"attributes":[{"value":"/ See the [method documentation](#tymethod.optional).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5621,"byte_end":5676,"line_start":209,"line_end":209,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5995,"byte_end":6003,"line_start":216,"line_end":216,"column_start":8,"column_end":16},"name":"optional","qualname":"::OptionalExtension::optional","value":"fn (self) -> Result<Option<T>>","parent":{"krate":0,"index":792},"children":[],"decl_id":null,"docs":" Converts a `Result<T>` into a `Result<Option<T>>`.","sig":null,"attributes":[{"value":"/ Converts a `Result<T>` into a `Result<Option<T>>`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5714,"byte_end":5768,"line_start":211,"line_end":211,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5773,"byte_end":5776,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ By default, Rusqlite treats 0 rows being returned from a query that is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5781,"byte_end":5855,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ expected to return 1 row as an error. This method will","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5860,"byte_end":5918,"line_start":214,"line_end":214,"column_start":5,"column_end":63}},{"value":"/ handle that error, and give you back an `Option<T>` instead.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":5923,"byte_end":5987,"line_start":215,"line_end":215,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1199},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8134,"byte_end":8138,"line_start":283,"line_end":283,"column_start":5,"column_end":9},"name":"Main","qualname":"::DatabaseName::Main","value":"DatabaseName::Main","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" The main database.\n","sig":null,"attributes":[{"value":"/ The main database.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8107,"byte_end":8129,"line_start":282,"line_end":282,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1201},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8221,"byte_end":8225,"line_start":286,"line_end":286,"column_start":5,"column_end":9},"name":"Temp","qualname":"::DatabaseName::Temp","value":"DatabaseName::Temp","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).\n","sig":null,"attributes":[{"value":"/ The temporary database (e.g., any \"CREATE TEMPORARY TABLE\" tables).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8145,"byte_end":8216,"line_start":285,"line_end":285,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1203},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8301,"byte_end":8309,"line_start":289,"line_end":289,"column_start":5,"column_end":13},"name":"Attached","qualname":"::DatabaseName::Attached","value":"DatabaseName::Attached(&'a str)","parent":{"krate":0,"index":1197},"children":[],"decl_id":null,"docs":" A database that has been attached via \"ATTACH DATABASE ...\".\n","sig":null,"attributes":[{"value":"/ A database that has been attached via \"ATTACH DATABASE ...\".","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8232,"byte_end":8296,"line_start":288,"line_end":288,"column_start":5,"column_end":69}}]},{"kind":"Enum","id":{"krate":0,"index":1197},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8084,"byte_end":8096,"line_start":281,"line_end":281,"column_start":10,"column_end":22},"name":"DatabaseName","qualname":"::DatabaseName","value":"DatabaseName::{Main, Temp, Attached}","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1201},{"krate":0,"index":1203}],"decl_id":null,"docs":" Name for a database within a SQLite connection.\n","sig":null,"attributes":[{"value":"/ Name for a database within a SQLite connection.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8000,"byte_end":8051,"line_start":279,"line_end":279,"column_start":1,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":810},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8912,"byte_end":8922,"line_start":312,"line_end":312,"column_start":12,"column_end":22},"name":"Connection","qualname":"::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"decl_id":null,"docs":" A connection to a SQLite database.\n","sig":null,"attributes":[{"value":"/ A connection to a SQLite database.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8862,"byte_end":8900,"line_start":311,"line_end":311,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9886,"byte_end":9890,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"open","qualname":"<Connection>::open","value":"fn <P> (path: P) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9182,"byte_end":9229,"line_start":327,"line_end":327,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9234,"byte_end":9237,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ `Connection::open(path)` is equivalent to","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9242,"byte_end":9287,"line_start":329,"line_end":329,"column_start":5,"column_end":50}},{"value":"/ `Connection::open_with_flags(path,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9292,"byte_end":9330,"line_start":330,"line_end":330,"column_start":5,"column_end":43}},{"value":"/ OpenFlags::SQLITE_OPEN_READ_WRITE |","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9335,"byte_end":9374,"line_start":331,"line_end":331,"column_start":5,"column_end":44}},{"value":"/ OpenFlags::SQLITE_OPEN_CREATE)`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9379,"byte_end":9415,"line_start":332,"line_end":332,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9420,"byte_end":9423,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9428,"byte_end":9446,"line_start":334,"line_end":334,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9451,"byte_end":9492,"line_start":335,"line_end":335,"column_start":5,"column_end":46}},{"value":"/ fn open_my_db() -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9497,"byte_end":9532,"line_start":336,"line_end":336,"column_start":5,"column_end":40}},{"value":"/     let path = \"./my_db.db3\";","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9537,"byte_end":9570,"line_start":337,"line_end":337,"column_start":5,"column_end":38}},{"value":"/     let db = Connection::open(&path)?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9575,"byte_end":9617,"line_start":338,"line_end":338,"column_start":5,"column_end":47}},{"value":"/     println!(\"{}\", db.is_autocommit());","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9622,"byte_end":9665,"line_start":339,"line_end":339,"column_start":5,"column_end":48}},{"value":"/     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9670,"byte_end":9684,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9689,"byte_end":9694,"line_start":341,"line_end":341,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9699,"byte_end":9706,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9711,"byte_end":9714,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9719,"byte_end":9732,"line_start":344,"line_end":344,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9737,"byte_end":9740,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9745,"byte_end":9814,"line_start":346,"line_end":346,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9819,"byte_end":9874,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10214,"byte_end":10228,"line_start":358,"line_end":358,"column_start":12,"column_end":26},"name":"open_in_memory","qualname":"<Connection>::open_in_memory","value":"fn () -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10042,"byte_end":10100,"line_start":353,"line_end":353,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10105,"byte_end":10108,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10113,"byte_end":10126,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10131,"byte_end":10134,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10139,"byte_end":10202,"line_start":357,"line_end":357,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10719,"byte_end":10734,"line_start":372,"line_end":372,"column_start":12,"column_end":27},"name":"open_with_flags","qualname":"<Connection>::open_with_flags","value":"fn <P> (path: P, flags: OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to a SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to a SQLite database.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10361,"byte_end":10408,"line_start":363,"line_end":363,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10413,"byte_end":10416,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10421,"byte_end":10512,"line_start":365,"line_end":365,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10517,"byte_end":10539,"line_start":366,"line_end":366,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10544,"byte_end":10547,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10552,"byte_end":10565,"line_start":368,"line_end":368,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10570,"byte_end":10573,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `path` cannot be converted to a C-compatible","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10578,"byte_end":10647,"line_start":370,"line_end":370,"column_start":5,"column_end":74}},{"value":"/ string or if the underlying SQLite open call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":10652,"byte_end":10707,"line_start":371,"line_end":371,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11431,"byte_end":11456,"line_start":389,"line_end":389,"column_start":12,"column_end":37},"name":"open_in_memory_with_flags","qualname":"<Connection>::open_in_memory_with_flags","value":"fn (flags: OpenFlags) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Open a new connection to an in-memory SQLite database.","sig":null,"attributes":[{"value":"/ Open a new connection to an in-memory SQLite database.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11128,"byte_end":11186,"line_start":381,"line_end":381,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11191,"byte_end":11194,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ [Database Connection](http://www.sqlite.org/c3ref/open.html) for a description of valid","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11199,"byte_end":11290,"line_start":383,"line_end":383,"column_start":5,"column_end":96}},{"value":"/ flag combinations.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11295,"byte_end":11317,"line_start":384,"line_end":384,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11322,"byte_end":11325,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11330,"byte_end":11343,"line_start":386,"line_end":386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11348,"byte_end":11351,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite open call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11356,"byte_end":11419,"line_start":388,"line_end":388,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12574,"byte_end":12587,"line_start":421,"line_end":421,"column_start":12,"column_end":25},"name":"execute_batch","qualname":"<Connection>::execute_batch","value":"fn (&self, sql: &str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to run multiple SQL statements (that cannot take any\n parameters).","sig":null,"attributes":[{"value":"/ Convenience method to run multiple SQL statements (that cannot take any","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11796,"byte_end":11871,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ parameters).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11876,"byte_end":11892,"line_start":399,"line_end":399,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11897,"byte_end":11900,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_exec](http://www.sqlite.org/c3ref/exec.html) under the hood.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11905,"byte_end":11983,"line_start":401,"line_end":401,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11988,"byte_end":11991,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":11996,"byte_end":12010,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12015,"byte_end":12018,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12023,"byte_end":12041,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12046,"byte_end":12087,"line_start":406,"line_end":406,"column_start":5,"column_end":46}},{"value":"/ fn create_tables(conn: &Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12092,"byte_end":12147,"line_start":407,"line_end":407,"column_start":5,"column_end":60}},{"value":"/     conn.execute_batch(","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12152,"byte_end":12179,"line_start":408,"line_end":408,"column_start":5,"column_end":32}},{"value":"/         \"BEGIN;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12184,"byte_end":12203,"line_start":409,"line_end":409,"column_start":5,"column_end":24}},{"value":"/                         CREATE TABLE foo(x INTEGER);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12208,"byte_end":12264,"line_start":410,"line_end":410,"column_start":5,"column_end":61}},{"value":"/                         CREATE TABLE bar(y TEXT);","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12269,"byte_end":12322,"line_start":411,"line_end":411,"column_start":5,"column_end":58}},{"value":"/                         COMMIT;\",","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12327,"byte_end":12364,"line_start":412,"line_end":412,"column_start":5,"column_end":42}},{"value":"/     )","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12369,"byte_end":12378,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12383,"byte_end":12388,"line_start":414,"line_end":414,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12393,"byte_end":12400,"line_start":415,"line_end":415,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12405,"byte_end":12408,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12413,"byte_end":12426,"line_start":417,"line_end":417,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12431,"byte_end":12434,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12439,"byte_end":12514,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12519,"byte_end":12562,"line_start":420,"line_end":420,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13453,"byte_end":13460,"line_start":446,"line_end":446,"column_start":12,"column_end":19},"name":"execute","qualname":"<Connection>::execute","value":"fn <P> (&self, sql: &str, params: P) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement.","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12681,"byte_end":12750,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12755,"byte_end":12758,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12763,"byte_end":12838,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12843,"byte_end":12879,"line_start":428,"line_end":428,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12884,"byte_end":12887,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12892,"byte_end":12906,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12911,"byte_end":12914,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12919,"byte_end":12937,"line_start":432,"line_end":432,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12942,"byte_end":12975,"line_start":433,"line_end":433,"column_start":5,"column_end":38}},{"value":"/ fn update_rows(conn: &Connection) {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":12980,"byte_end":13019,"line_start":434,"line_end":434,"column_start":5,"column_end":44}},{"value":"/     match conn.execute(\"UPDATE foo SET bar = 'baz' WHERE qux = ?\", &[1i32]) {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13024,"byte_end":13105,"line_start":435,"line_end":435,"column_start":5,"column_end":86}},{"value":"/         Ok(updated) => println!(\"{} rows were updated\", updated),","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13110,"byte_end":13179,"line_start":436,"line_end":436,"column_start":5,"column_end":74}},{"value":"/         Err(err) => println!(\"update failed: {}\", err),","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13184,"byte_end":13243,"line_start":437,"line_end":437,"column_start":5,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13248,"byte_end":13257,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13262,"byte_end":13267,"line_start":439,"line_end":439,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13272,"byte_end":13279,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13284,"byte_end":13287,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13292,"byte_end":13305,"line_start":442,"line_end":442,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13310,"byte_end":13313,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13318,"byte_end":13393,"line_start":444,"line_end":444,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13398,"byte_end":13441,"line_start":445,"line_end":445,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14430,"byte_end":14443,"line_start":477,"line_end":477,"column_start":12,"column_end":25},"name":"execute_named","qualname":"<Connection>::execute_named","value":"fn (&self, sql: &str, params: &[(&str, &dyn ToSql)]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to prepare and execute a single SQL statement with\n named parameter(s).","sig":null,"attributes":[{"value":"/ Convenience method to prepare and execute a single SQL statement with","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13702,"byte_end":13775,"line_start":455,"line_end":455,"column_start":5,"column_end":78}},{"value":"/ named parameter(s).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13780,"byte_end":13803,"line_start":456,"line_end":456,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13808,"byte_end":13811,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ On success, returns the number of rows that were changed or inserted or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13816,"byte_end":13891,"line_start":458,"line_end":458,"column_start":5,"column_end":80}},{"value":"/ deleted (via `sqlite3_changes`).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13896,"byte_end":13932,"line_start":459,"line_end":459,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13937,"byte_end":13940,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13945,"byte_end":13959,"line_start":461,"line_end":461,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13964,"byte_end":13967,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13972,"byte_end":13990,"line_start":463,"line_end":463,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":13995,"byte_end":14036,"line_start":464,"line_end":464,"column_start":5,"column_end":46}},{"value":"/ fn insert(conn: &Connection) -> Result<usize> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14041,"byte_end":14092,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/     conn.execute_named(","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14097,"byte_end":14124,"line_start":466,"line_end":466,"column_start":5,"column_end":32}},{"value":"/         \"INSERT INTO test (name) VALUES (:name)\",","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14129,"byte_end":14182,"line_start":467,"line_end":467,"column_start":5,"column_end":58}},{"value":"/         &[(\":name\", &\"one\")],","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14187,"byte_end":14220,"line_start":468,"line_end":468,"column_start":5,"column_end":38}},{"value":"/     )","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14225,"byte_end":14234,"line_start":469,"line_end":469,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14239,"byte_end":14244,"line_start":470,"line_end":470,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14249,"byte_end":14256,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14261,"byte_end":14264,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14269,"byte_end":14282,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14287,"byte_end":14290,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14295,"byte_end":14370,"line_start":475,"line_end":475,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14375,"byte_end":14418,"line_start":476,"line_end":476,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14873,"byte_end":14890,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"last_insert_rowid","qualname":"<Connection>::last_insert_rowid","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the SQLite rowid of the most recent successful INSERT.","sig":null,"attributes":[{"value":"/ Get the SQLite rowid of the most recent successful INSERT.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14673,"byte_end":14735,"line_start":484,"line_end":484,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14740,"byte_end":14743,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ Uses [sqlite3_last_insert_rowid](https://www.sqlite.org/c3ref/last_insert_rowid.html) under","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14748,"byte_end":14843,"line_start":486,"line_end":486,"column_start":5,"column_end":100}},{"value":"/ the hood.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14848,"byte_end":14861,"line_start":487,"line_end":487,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15915,"byte_end":15924,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"query_row","qualname":"<Connection>::query_row","value":"fn <T, P, F> (&self, sql: &str, params: P, f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":14967,"byte_end":15037,"line_start":492,"line_end":492,"column_start":5,"column_end":75}},{"value":"/ single row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15042,"byte_end":15057,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15062,"byte_end":15065,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15070,"byte_end":15084,"line_start":495,"line_end":495,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15089,"byte_end":15092,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15097,"byte_end":15115,"line_start":497,"line_end":497,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result,Connection, NO_PARAMS};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15120,"byte_end":15171,"line_start":498,"line_end":498,"column_start":5,"column_end":56}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15176,"byte_end":15238,"line_start":499,"line_end":499,"column_start":5,"column_end":67}},{"value":"/     conn.query_row(","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15243,"byte_end":15266,"line_start":500,"line_end":500,"column_start":5,"column_end":28}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15271,"byte_end":15335,"line_start":501,"line_end":501,"column_start":5,"column_end":69}},{"value":"/         NO_PARAMS,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15340,"byte_end":15362,"line_start":502,"line_end":502,"column_start":5,"column_end":27}},{"value":"/         |row| row.get(0),","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15367,"byte_end":15396,"line_start":503,"line_end":503,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15401,"byte_end":15410,"line_start":504,"line_end":504,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15415,"byte_end":15420,"line_start":505,"line_end":505,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15425,"byte_end":15432,"line_start":506,"line_end":506,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15437,"byte_end":15440,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15445,"byte_end":15518,"line_start":508,"line_end":508,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15523,"byte_end":15535,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15540,"byte_end":15543,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15548,"byte_end":15621,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15626,"byte_end":15698,"line_start":512,"line_end":512,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15703,"byte_end":15741,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15746,"byte_end":15749,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15754,"byte_end":15767,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15772,"byte_end":15775,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15780,"byte_end":15855,"line_start":517,"line_end":517,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":15860,"byte_end":15903,"line_start":518,"line_end":518,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16805,"byte_end":16820,"line_start":544,"line_end":544,"column_start":12,"column_end":27},"name":"query_row_named","qualname":"<Connection>::query_row_named","value":"fn <T, F> (&self, sql: &str, params: &[(&str, &dyn ToSql)], f: F) -> Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query with named parameter(s) that is\n expected to return a single row.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query with named parameter(s) that is","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16208,"byte_end":16281,"line_start":530,"line_end":530,"column_start":5,"column_end":78}},{"value":"/ expected to return a single row.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16286,"byte_end":16322,"line_start":531,"line_end":531,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16327,"byte_end":16330,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16335,"byte_end":16408,"line_start":533,"line_end":533,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16413,"byte_end":16425,"line_start":534,"line_end":534,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16430,"byte_end":16433,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Returns `Err(QueryReturnedNoRows)` if no results are returned. If the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16438,"byte_end":16511,"line_start":536,"line_end":536,"column_start":5,"column_end":78}},{"value":"/ query truly is optional, you can call `.optional()` on the result of","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16516,"byte_end":16588,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ this to get a `Result<Option<T>>`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16593,"byte_end":16631,"line_start":538,"line_end":538,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16636,"byte_end":16639,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16644,"byte_end":16657,"line_start":540,"line_end":540,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16662,"byte_end":16665,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16670,"byte_end":16745,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":16750,"byte_end":16793,"line_start":543,"line_end":543,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17998,"byte_end":18016,"line_start":578,"line_end":578,"column_start":12,"column_end":30},"name":"query_row_and_then","qualname":"<Connection>::query_row_and_then","value":"fn <T, E, P, F> (&self, sql: &str, params: P, f: F) -> result::Result<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to execute a query that is expected to return a\n single row, and execute a mapping via `f` on that returned row with\n the possibility of failure. The `Result` type of `f` must implement\n `std::convert::From<Error>`.","sig":null,"attributes":[{"value":"/ Convenience method to execute a query that is expected to return a","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17078,"byte_end":17148,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/ single row, and execute a mapping via `f` on that returned row with","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17153,"byte_end":17224,"line_start":554,"line_end":554,"column_start":5,"column_end":76}},{"value":"/ the possibility of failure. The `Result` type of `f` must implement","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17229,"byte_end":17300,"line_start":555,"line_end":555,"column_start":5,"column_end":76}},{"value":"/ `std::convert::From<Error>`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17305,"byte_end":17337,"line_start":556,"line_end":556,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17342,"byte_end":17345,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17350,"byte_end":17364,"line_start":558,"line_end":558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17369,"byte_end":17372,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17377,"byte_end":17395,"line_start":560,"line_end":560,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Result,Connection, NO_PARAMS};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17400,"byte_end":17451,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/ fn preferred_locale(conn: &Connection) -> Result<String> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17456,"byte_end":17518,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/     conn.query_row_and_then(","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17523,"byte_end":17555,"line_start":563,"line_end":563,"column_start":5,"column_end":37}},{"value":"/         \"SELECT value FROM preferences WHERE name='locale'\",","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17560,"byte_end":17624,"line_start":564,"line_end":564,"column_start":5,"column_end":69}},{"value":"/         NO_PARAMS,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17629,"byte_end":17651,"line_start":565,"line_end":565,"column_start":5,"column_end":27}},{"value":"/         |row| row.get(0),","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17656,"byte_end":17685,"line_start":566,"line_end":566,"column_start":5,"column_end":34}},{"value":"/     )","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17690,"byte_end":17699,"line_start":567,"line_end":567,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17704,"byte_end":17709,"line_start":568,"line_end":568,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17714,"byte_end":17721,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17726,"byte_end":17729,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ If the query returns more than one row, all rows except the first are","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17734,"byte_end":17807,"line_start":571,"line_end":571,"column_start":5,"column_end":78}},{"value":"/ ignored.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17812,"byte_end":17824,"line_start":572,"line_end":572,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17829,"byte_end":17832,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17837,"byte_end":17850,"line_start":574,"line_end":574,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17855,"byte_end":17858,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17863,"byte_end":17938,"line_start":576,"line_end":576,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":17943,"byte_end":17986,"line_start":577,"line_end":577,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19031,"byte_end":19038,"line_start":610,"line_end":610,"column_start":12,"column_end":19},"name":"prepare","qualname":"<Connection>::prepare","value":"fn (&self, sql: &str) -> Result<Statement<'_>>","parent":null,"children":[],"decl_id":null,"docs":" Prepare a SQL statement for execution.","sig":null,"attributes":[{"value":"/ Prepare a SQL statement for execution.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18438,"byte_end":18480,"line_start":592,"line_end":592,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18485,"byte_end":18488,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ ## Example","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18493,"byte_end":18507,"line_start":594,"line_end":594,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18512,"byte_end":18515,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18520,"byte_end":18538,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ # use rusqlite::{Connection, Result};","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18543,"byte_end":18584,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ fn insert_new_people(conn: &Connection) -> Result<()> {","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18589,"byte_end":18648,"line_start":598,"line_end":598,"column_start":5,"column_end":64}},{"value":"/     let mut stmt = conn.prepare(\"INSERT INTO People (name) VALUES (?)\")?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18653,"byte_end":18730,"line_start":599,"line_end":599,"column_start":5,"column_end":82}},{"value":"/     stmt.execute(&[\"Joe Smith\"])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18735,"byte_end":18773,"line_start":600,"line_end":600,"column_start":5,"column_end":43}},{"value":"/     stmt.execute(&[\"Bob Jones\"])?;","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18778,"byte_end":18816,"line_start":601,"line_end":601,"column_start":5,"column_end":43}},{"value":"/     Ok(())","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18821,"byte_end":18835,"line_start":602,"line_end":602,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18840,"byte_end":18845,"line_start":603,"line_end":603,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18850,"byte_end":18857,"line_start":604,"line_end":604,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18862,"byte_end":18865,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18870,"byte_end":18883,"line_start":606,"line_end":606,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18888,"byte_end":18891,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if `sql` cannot be converted to a C-compatible string","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18896,"byte_end":18971,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ or if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":18976,"byte_end":19019,"line_start":609,"line_end":609,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19512,"byte_end":19517,"line_start":623,"line_end":623,"column_start":12,"column_end":17},"name":"close","qualname":"<Connection>::close","value":"fn (self) -> std::result::Result<(), (Connection, Error)>","parent":null,"children":[],"decl_id":null,"docs":" Close the SQLite connection.","sig":null,"attributes":[{"value":"/ Close the SQLite connection.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19143,"byte_end":19175,"line_start":614,"line_end":614,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19180,"byte_end":19183,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ This is functionally equivalent to the `Drop` implementation for","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19188,"byte_end":19256,"line_start":616,"line_end":616,"column_start":5,"column_end":73}},{"value":"/ `Connection` except that on failure, it returns an error and the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19261,"byte_end":19329,"line_start":617,"line_end":617,"column_start":5,"column_end":73}},{"value":"/ connection itself (presumably so closing can be attempted again).","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19334,"byte_end":19403,"line_start":618,"line_end":618,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19408,"byte_end":19411,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ # Failure","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19416,"byte_end":19429,"line_start":620,"line_end":620,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19434,"byte_end":19437,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ Will return `Err` if the underlying SQLite call fails.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":19442,"byte_end":19500,"line_start":622,"line_end":622,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22536,"byte_end":22542,"line_start":711,"line_end":711,"column_start":19,"column_end":25},"name":"handle","qualname":"<Connection>::handle","value":"fn (&self) -> *mut ffi::sqlite3","parent":null,"children":[],"decl_id":null,"docs":" Get access to the underlying SQLite database connection handle.","sig":null,"attributes":[{"value":"/ Get access to the underlying SQLite database connection handle.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":21997,"byte_end":22064,"line_start":698,"line_end":698,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22069,"byte_end":22072,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22077,"byte_end":22090,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22095,"byte_end":22098,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ You should not need to use this function. If you do need to, please","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22103,"byte_end":22174,"line_start":702,"line_end":702,"column_start":5,"column_end":76}},{"value":"/ [open an issue on the rusqlite repository](https://github.com/jgallagher/rusqlite/issues) and describe","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22179,"byte_end":22285,"line_start":703,"line_end":703,"column_start":5,"column_end":111}},{"value":"/ your use case.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22290,"byte_end":22308,"line_start":704,"line_end":704,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22313,"byte_end":22316,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22321,"byte_end":22333,"line_start":706,"line_end":706,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22338,"byte_end":22341,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because it gives you raw access","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22346,"byte_end":22405,"line_start":708,"line_end":708,"column_start":5,"column_end":64}},{"value":"/ to the SQLite connection, and what you do with it could impact the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22410,"byte_end":22480,"line_start":709,"line_end":709,"column_start":5,"column_end":75}},{"value":"/ safety of this `Connection`.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22485,"byte_end":22517,"line_start":710,"line_end":710,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22817,"byte_end":22828,"line_start":719,"line_end":719,"column_start":19,"column_end":30},"name":"from_handle","qualname":"<Connection>::from_handle","value":"fn (db: *mut ffi::sqlite3) -> Result<Connection>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Connection` from a raw handle.","sig":null,"attributes":[{"value":"/ Create a `Connection` from a raw handle.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22614,"byte_end":22658,"line_start":715,"line_end":715,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22663,"byte_end":22666,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The underlying SQLite database connection handle will not be closed when","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22671,"byte_end":22747,"line_start":717,"line_end":717,"column_start":5,"column_end":81}},{"value":"/ the returned connection is dropped/closed.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":22752,"byte_end":22798,"line_start":718,"line_end":718,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23274,"byte_end":23294,"line_start":731,"line_end":731,"column_start":12,"column_end":32},"name":"get_interrupt_handle","qualname":"<Connection>::get_interrupt_handle","value":"fn (&self) -> InterruptHandle","parent":null,"children":[],"decl_id":null,"docs":" Get access to a handle that can be used to interrupt long running\n queries from another thread.\n","sig":null,"attributes":[{"value":"/ Get access to a handle that can be used to interrupt long running","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23156,"byte_end":23225,"line_start":729,"line_end":729,"column_start":5,"column_end":74}},{"value":"/ queries from another thread.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23230,"byte_end":23262,"line_start":730,"line_end":730,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23832,"byte_end":23845,"line_start":748,"line_end":748,"column_start":12,"column_end":25},"name":"is_autocommit","qualname":"<Connection>::is_autocommit","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Test for auto-commit mode.\n Autocommit mode is on by default.\n","sig":null,"attributes":[{"value":"/ Test for auto-commit mode.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23748,"byte_end":23778,"line_start":746,"line_end":746,"column_start":5,"column_end":35}},{"value":"/ Autocommit mode is on by default.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23783,"byte_end":23820,"line_start":747,"line_end":747,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24027,"byte_end":24034,"line_start":754,"line_end":754,"column_start":12,"column_end":19},"name":"is_busy","qualname":"<Connection>::is_busy","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determine if all associated prepared statements have been reset.\n","sig":null,"attributes":[{"value":"/ Determine if all associated prepared statements have been reset.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23915,"byte_end":23983,"line_start":752,"line_end":752,"column_start":5,"column_end":73}},{"value":"cfg(feature = \"bundled\")","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":23988,"byte_end":24015,"line_start":753,"line_end":753,"column_start":5,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1211},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24502,"byte_end":24511,"line_start":771,"line_end":771,"column_start":16,"column_end":25},"name":"OpenFlags","qualname":"::OpenFlags","value":"OpenFlags {  }","parent":null,"children":[{"krate":0,"index":1212}],"decl_id":null,"docs":"Flags for opening SQLite database connections.\nSee [sqlite3_open_v2](http://www.sqlite.org/c3ref/open.html) for details.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"<::bitflags::__bitflags macros>","byte_start":8297055,"byte_end":8297066,"line_start":8,"line_end":8,"column_start":8,"column_end":19}}]},{"kind":"Const","id":{"krate":0,"index":1256},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24551,"byte_end":24572,"line_start":772,"line_end":772,"column_start":15,"column_end":36},"name":"SQLITE_OPEN_READ_ONLY","qualname":"::OpenFlags::SQLITE_OPEN_READ_ONLY","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1257},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24620,"byte_end":24642,"line_start":773,"line_end":773,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_READ_WRITE","qualname":"::OpenFlags::SQLITE_OPEN_READ_WRITE","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1258},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24690,"byte_end":24708,"line_start":774,"line_end":774,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_CREATE","qualname":"::OpenFlags::SQLITE_OPEN_CREATE","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1259},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24757,"byte_end":24772,"line_start":775,"line_end":775,"column_start":15,"column_end":30},"name":"SQLITE_OPEN_URI","qualname":"::OpenFlags::SQLITE_OPEN_URI","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1260},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24812,"byte_end":24830,"line_start":776,"line_end":776,"column_start":15,"column_end":33},"name":"SQLITE_OPEN_MEMORY","qualname":"::OpenFlags::SQLITE_OPEN_MEMORY","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1261},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24867,"byte_end":24887,"line_start":777,"line_end":777,"column_start":15,"column_end":35},"name":"SQLITE_OPEN_NO_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_NO_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1262},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24935,"byte_end":24957,"line_start":778,"line_end":778,"column_start":15,"column_end":37},"name":"SQLITE_OPEN_FULL_MUTEX","qualname":"::OpenFlags::SQLITE_OPEN_FULL_MUTEX","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1263},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25005,"byte_end":25029,"line_start":779,"line_end":779,"column_start":15,"column_end":39},"name":"SQLITE_OPEN_SHARED_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_SHARED_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1264},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25060,"byte_end":25085,"line_start":780,"line_end":780,"column_start":15,"column_end":40},"name":"SQLITE_OPEN_PRIVATE_CACHE","qualname":"::OpenFlags::SQLITE_OPEN_PRIVATE_CACHE","value":"OpenFlags","parent":{"krate":0,"index":1255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":862},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26361,"byte_end":26389,"line_start":812,"line_end":812,"column_start":15,"column_end":43},"name":"bypass_sqlite_initialization","qualname":"::bypass_sqlite_initialization","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or\n later. If you are running against a SQLite older than that, rusqlite\n attempts to ensure safety by performing configuration and initialization of\n SQLite itself the first time you\n attempt to open a connection. By default, rusqlite panics if that\n initialization fails, since that could mean SQLite has been initialized in\n single-thread mode.","sig":null,"attributes":[{"value":"/ rusqlite's check for a safe SQLite threading mode requires SQLite 3.7.0 or","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25353,"byte_end":25431,"line_start":793,"line_end":793,"column_start":1,"column_end":79}},{"value":"/ later. If you are running against a SQLite older than that, rusqlite","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25432,"byte_end":25504,"line_start":794,"line_end":794,"column_start":1,"column_end":73}},{"value":"/ attempts to ensure safety by performing configuration and initialization of","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25505,"byte_end":25584,"line_start":795,"line_end":795,"column_start":1,"column_end":80}},{"value":"/ SQLite itself the first time you","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25585,"byte_end":25621,"line_start":796,"line_end":796,"column_start":1,"column_end":37}},{"value":"/ attempt to open a connection. By default, rusqlite panics if that","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25622,"byte_end":25691,"line_start":797,"line_end":797,"column_start":1,"column_end":70}},{"value":"/ initialization fails, since that could mean SQLite has been initialized in","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25692,"byte_end":25770,"line_start":798,"line_end":798,"column_start":1,"column_end":79}},{"value":"/ single-thread mode.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25771,"byte_end":25794,"line_start":799,"line_end":799,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25795,"byte_end":25798,"line_start":800,"line_end":800,"column_start":1,"column_end":4}},{"value":"/ If you are encountering that panic _and_ can ensure that SQLite has been","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25799,"byte_end":25875,"line_start":801,"line_end":801,"column_start":1,"column_end":77}},{"value":"/ initialized in either multi-thread or serialized mode, call this function","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25876,"byte_end":25953,"line_start":802,"line_end":802,"column_start":1,"column_end":78}},{"value":"/ prior to attempting to open a connection and rusqlite's initialization","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25954,"byte_end":26028,"line_start":803,"line_end":803,"column_start":1,"column_end":75}},{"value":"/ process will by skipped.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26029,"byte_end":26057,"line_start":804,"line_end":804,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26058,"byte_end":26061,"line_start":805,"line_end":805,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26062,"byte_end":26074,"line_start":806,"line_end":806,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26075,"byte_end":26078,"line_start":807,"line_end":807,"column_start":1,"column_end":4}},{"value":"/ This function is unsafe because if you call it and SQLite has actually been","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26079,"byte_end":26158,"line_start":808,"line_end":808,"column_start":1,"column_end":80}},{"value":"/ configured to run in single-thread mode,","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26159,"byte_end":26203,"line_start":809,"line_end":809,"column_start":1,"column_end":45}},{"value":"/ you may enounter memory errors or data corruption or any number of terrible","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26204,"byte_end":26283,"line_start":810,"line_end":810,"column_start":1,"column_end":80}},{"value":"/ things that should not be possible when you're using Rust.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26284,"byte_end":26346,"line_start":811,"line_end":811,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":863},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26967,"byte_end":26994,"line_start":826,"line_end":826,"column_start":15,"column_end":42},"name":"bypass_sqlite_version_check","qualname":"::bypass_sqlite_version_check","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" rusqlite performs a one-time check that the runtime SQLite version is at\n least as new as the version of SQLite found when rusqlite was built.\n Bypassing this check may be dangerous; e.g., if you use features of SQLite\n that are not present in the runtime version.","sig":null,"attributes":[{"value":"/ rusqlite performs a one-time check that the runtime SQLite version is at","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26452,"byte_end":26528,"line_start":816,"line_end":816,"column_start":1,"column_end":77}},{"value":"/ least as new as the version of SQLite found when rusqlite was built.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26529,"byte_end":26601,"line_start":817,"line_end":817,"column_start":1,"column_end":73}},{"value":"/ Bypassing this check may be dangerous; e.g., if you use features of SQLite","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26602,"byte_end":26680,"line_start":818,"line_end":818,"column_start":1,"column_end":79}},{"value":"/ that are not present in the runtime version.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26681,"byte_end":26729,"line_start":819,"line_end":819,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26730,"byte_end":26733,"line_start":820,"line_end":820,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26734,"byte_end":26746,"line_start":821,"line_end":821,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26747,"byte_end":26750,"line_start":822,"line_end":822,"column_start":1,"column_end":4}},{"value":"/ If you are sure the runtime version is compatible with the","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26751,"byte_end":26813,"line_start":823,"line_end":823,"column_start":1,"column_end":63}},{"value":"/ build-time version for your usage, you can bypass the version check by","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26814,"byte_end":26888,"line_start":824,"line_end":824,"column_start":1,"column_end":75}},{"value":"/ calling this function before your first connection attempt.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":26889,"byte_end":26952,"line_start":825,"line_end":825,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27177,"byte_end":27192,"line_start":832,"line_end":832,"column_start":12,"column_end":27},"name":"InterruptHandle","qualname":"::InterruptHandle","value":"InterruptHandle {  }","parent":null,"children":[{"krate":0,"index":865}],"decl_id":null,"docs":" Allows interrupting a long-running computation.\n","sig":null,"attributes":[{"value":"/ Allows interrupting a long-running computation.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27114,"byte_end":27165,"line_start":831,"line_end":831,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27501,"byte_end":27510,"line_start":842,"line_end":842,"column_start":12,"column_end":21},"name":"interrupt","qualname":"<InterruptHandle>::interrupt","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Interrupt the query currently executing on another thread. This will\n cause that query to fail with a `SQLITE3_INTERRUPT` error.\n","sig":null,"attributes":[{"value":"/ Interrupt the query currently executing on another thread. This will","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27350,"byte_end":27422,"line_start":840,"line_end":840,"column_start":5,"column_end":77}},{"value":"/ cause that query to fail with a `SQLITE3_INTERRUPT` error.","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27427,"byte_end":27489,"line_start":841,"line_end":841,"column_start":5,"column_end":67}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59871,"byte_end":59876,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":62073,"byte_end":62078,"line_start":150,"line_end":150,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":62200,"byte_end":62205,"line_start":156,"line_end":156,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":62514,"byte_end":62519,"line_start":166,"line_end":166,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":63456,"byte_end":63461,"line_start":188,"line_end":188,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":66613,"byte_end":66618,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71140,"byte_end":71150,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":73778,"byte_end":73793,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77472,"byte_end":77482,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79706,"byte_end":79721,"line_start":68,"line_end":68,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79881,"byte_end":79896,"line_start":76,"line_end":76,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80020,"byte_end":80035,"line_start":82,"line_end":82,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80216,"byte_end":80231,"line_start":91,"line_end":91,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80629,"byte_end":80643,"line_start":106,"line_end":106,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87659,"byte_end":87665,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87917,"byte_end":87926,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90782,"byte_end":90786,"line_start":104,"line_end":104,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91591,"byte_end":91594,"line_start":131,"line_end":131,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95025,"byte_end":95035,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/inner_connection.rs","byte_start":99762,"byte_end":99777,"line_start":38,"line_end":38,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/inner_connection.rs","byte_start":108837,"byte_end":108852,"line_start":303,"line_end":303,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":114083,"byte_end":114086,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":117918,"byte_end":117921,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118014,"byte_end":118024,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126614,"byte_end":126626,"line_start":12,"line_end":12,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":130377,"byte_end":130389,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":130847,"byte_end":130851,"line_start":14,"line_end":14,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131931,"byte_end":131935,"line_start":46,"line_end":46,"column_start":13,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132320,"byte_end":132324,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132482,"byte_end":132485,"line_start":73,"line_end":73,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132907,"byte_end":132917,"line_start":94,"line_end":94,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133115,"byte_end":133125,"line_start":103,"line_end":103,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133624,"byte_end":133635,"line_start":125,"line_end":125,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":414}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133849,"byte_end":133860,"line_start":134,"line_end":134,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":134273,"byte_end":134277,"line_start":150,"line_end":150,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135198,"byte_end":135201,"line_start":189,"line_end":189,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140777,"byte_end":140786,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":509},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":520},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":160614,"byte_end":160623,"line_start":618,"line_end":618,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":160824,"byte_end":160833,"line_start":626,"line_end":626,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":161247,"byte_end":161256,"line_start":641,"line_end":641,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":161358,"byte_end":161367,"line_start":648,"line_end":648,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178738,"byte_end":178749,"line_start":90,"line_end":90,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":182384,"byte_end":182395,"line_start":198,"line_end":198,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":182537,"byte_end":182548,"line_start":207,"line_end":207,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":182618,"byte_end":182627,"line_start":213,"line_end":213,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185884,"byte_end":185893,"line_start":311,"line_end":311,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186035,"byte_end":186044,"line_start":320,"line_end":320,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186114,"byte_end":186124,"line_start":326,"line_end":326,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206769,"byte_end":206781,"line_start":30,"line_end":30,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":207364,"byte_end":207376,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208063,"byte_end":208075,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":211328,"byte_end":211334,"line_start":163,"line_end":163,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":211478,"byte_end":211481,"line_start":169,"line_end":169,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":212457,"byte_end":212463,"line_start":203,"line_end":203,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":212692,"byte_end":212697,"line_start":212,"line_end":212,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/time.rs","byte_start":214739,"byte_end":214747,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/time.rs","byte_start":215012,"byte_end":215020,"line_start":20,"line_end":20,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217912,"byte_end":217923,"line_start":27,"line_end":27,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219067,"byte_end":219078,"line_start":71,"line_end":71,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219692,"byte_end":219695,"line_start":90,"line_end":90,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":220916,"byte_end":220922,"line_start":146,"line_end":146,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221160,"byte_end":221163,"line_start":158,"line_end":158,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221408,"byte_end":221413,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221536,"byte_end":221542,"line_start":176,"line_end":176,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221742,"byte_end":221745,"line_start":185,"line_end":185,"column_start":16,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225348,"byte_end":225353,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225437,"byte_end":225442,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225540,"byte_end":225545,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226494,"byte_end":226499,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226587,"byte_end":226592,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226680,"byte_end":226685,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226777,"byte_end":226782,"line_start":93,"line_end":93,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":737}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226880,"byte_end":226885,"line_start":99,"line_end":99,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":227059,"byte_end":227064,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227995,"byte_end":228003,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228326,"byte_end":228334,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755},{"krate":0,"index":756},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229677,"byte_end":229682,"line_start":74,"line_end":74,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230172,"byte_end":230180,"line_start":89,"line_end":89,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230300,"byte_end":230308,"line_start":95,"line_end":95,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230419,"byte_end":230427,"line_start":101,"line_end":101,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230820,"byte_end":230828,"line_start":113,"line_end":113,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197262,"byte_end":197266,"line_start":94,"line_end":94,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":6068,"byte_end":6074,"line_start":219,"line_end":219,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8566,"byte_end":8578,"line_start":300,"line_end":300,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9037,"byte_end":9047,"line_start":318,"line_end":318,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9066,"byte_end":9076,"line_start":320,"line_end":320,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9165,"byte_end":9175,"line_start":326,"line_end":326,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":821},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":839},{"krate":0,"index":842},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24116,"byte_end":24126,"line_start":759,"line_end":759,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25127,"byte_end":25136,"line_start":784,"line_end":784,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27263,"byte_end":27278,"line_start":836,"line_end":836,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27303,"byte_end":27318,"line_start":837,"line_end":837,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27328,"byte_end":27343,"line_start":839,"line_end":839,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":2923,"byte_end":2929,"line_start":104,"line_end":104,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":174}},{"kind":"Mod","span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":3375,"byte_end":3380,"line_start":125,"line_end":125,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":611}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":59871,"byte_end":59876,"line_start":108,"line_end":108,"column_start":20,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":62073,"byte_end":62078,"line_start":150,"line_end":150,"column_start":31,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":62200,"byte_end":62205,"line_start":156,"line_end":156,"column_start":37,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":62514,"byte_end":62519,"line_start":166,"line_end":166,"column_start":29,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":63456,"byte_end":63461,"line_start":188,"line_end":188,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/error.rs","byte_start":66613,"byte_end":66618,"line_start":255,"line_end":255,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":871},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":71140,"byte_end":71150,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/busy.rs","byte_start":73778,"byte_end":73793,"line_start":69,"line_end":69,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":77472,"byte_end":77482,"line_start":9,"line_end":9,"column_start":6,"column_end":16},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79706,"byte_end":79721,"line_start":68,"line_end":68,"column_start":23,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":79881,"byte_end":79896,"line_start":76,"line_end":76,"column_start":26,"column_end":41},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2065}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80020,"byte_end":80035,"line_start":82,"line_end":82,"column_start":15,"column_end":30},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":113},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80216,"byte_end":80231,"line_start":91,"line_end":91,"column_start":6,"column_end":21},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/cache.rs","byte_start":80629,"byte_end":80643,"line_start":106,"line_end":106,"column_start":6,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87659,"byte_end":87665,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":931},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":87917,"byte_end":87926,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":90782,"byte_end":90786,"line_start":104,"line_end":104,"column_start":13,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/column.rs","byte_start":91591,"byte_end":91594,"line_start":131,"line_end":131,"column_start":13,"column_end":16},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/config.rs","byte_start":95025,"byte_end":95035,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/inner_connection.rs","byte_start":99762,"byte_end":99777,"line_start":38,"line_end":38,"column_start":6,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/inner_connection.rs","byte_start":108837,"byte_end":108852,"line_start":303,"line_end":303,"column_start":15,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":237},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":114083,"byte_end":114086,"line_start":14,"line_end":14,"column_start":6,"column_end":9},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":279},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":117918,"byte_end":117921,"line_start":152,"line_end":152,"column_start":16,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":279},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/pragma.rs","byte_start":118014,"byte_end":118024,"line_start":160,"line_end":160,"column_start":6,"column_end":16},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":126614,"byte_end":126626,"line_start":12,"line_end":12,"column_start":6,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/raw_statement.rs","byte_start":130377,"byte_end":130389,"line_start":146,"line_end":146,"column_start":15,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":938},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":130847,"byte_end":130851,"line_start":14,"line_end":14,"column_start":13,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":131931,"byte_end":131935,"line_start":46,"line_end":46,"column_start":13,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":359},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132320,"byte_end":132324,"line_start":62,"line_end":62,"column_start":15,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":359},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132482,"byte_end":132485,"line_start":73,"line_end":73,"column_start":33,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":376},"to":{"krate":18,"index":41}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":132907,"byte_end":132917,"line_start":94,"line_end":94,"column_start":19,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133115,"byte_end":133125,"line_start":103,"line_end":103,"column_start":25,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133624,"byte_end":133635,"line_start":125,"line_end":125,"column_start":22,"column_end":33},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":404},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":133849,"byte_end":133860,"line_start":134,"line_end":134,"column_start":28,"column_end":39},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":4773}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":134273,"byte_end":134277,"line_start":150,"line_end":150,"column_start":43,"column_end":47},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":359},"to":{"krate":19,"index":6}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/row.rs","byte_start":135198,"byte_end":135201,"line_start":189,"line_end":189,"column_start":13,"column_end":16},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":429},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":140777,"byte_end":140786,"line_start":24,"line_end":24,"column_start":6,"column_end":15},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":160614,"byte_end":160623,"line_start":618,"line_end":618,"column_start":29,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":1804}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":160824,"byte_end":160833,"line_start":626,"line_end":626,"column_start":21,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":161247,"byte_end":161256,"line_start":641,"line_end":641,"column_start":15,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":484},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/statement.rs","byte_start":161358,"byte_end":161367,"line_start":648,"line_end":648,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":484},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":178738,"byte_end":178749,"line_start":90,"line_end":90,"column_start":6,"column_end":17},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":182384,"byte_end":182395,"line_start":198,"line_end":198,"column_start":16,"column_end":27},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":182537,"byte_end":182548,"line_start":207,"line_end":207,"column_start":15,"column_end":26},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1005},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":182618,"byte_end":182627,"line_start":213,"line_end":213,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":185884,"byte_end":185893,"line_start":311,"line_end":311,"column_start":16,"column_end":25},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":2054}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186035,"byte_end":186044,"line_start":320,"line_end":320,"column_start":15,"column_end":24},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":554},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/transaction.rs","byte_start":186114,"byte_end":186124,"line_start":326,"line_end":326,"column_start":6,"column_end":16},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":206769,"byte_end":206781,"line_start":30,"line_end":30,"column_start":20,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":1619}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":207364,"byte_end":207376,"line_start":44,"line_end":44,"column_start":23,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1012},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":208063,"byte_end":208075,"line_start":62,"line_end":62,"column_start":16,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1012},"to":{"krate":1,"index":1624}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":209626,"byte_end":209631,"line_start":99,"line_end":99,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":1888},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":211328,"byte_end":211334,"line_start":163,"line_end":163,"column_start":18,"column_end":24},"kind":{"Impl":{"id":56}},"from":{"krate":5,"index":4732},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":211478,"byte_end":211481,"line_start":169,"line_end":169,"column_start":18,"column_end":21},"kind":{"Impl":{"id":57}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":212457,"byte_end":212463,"line_start":203,"line_end":203,"column_start":30,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":2,"index":29311},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/from_sql.rs","byte_start":212692,"byte_end":212697,"line_start":212,"line_end":212,"column_start":18,"column_end":23},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1109},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/time.rs","byte_start":214739,"byte_end":214747,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":20,"index":343},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/time.rs","byte_start":215012,"byte_end":215020,"line_start":20,"line_end":20,"column_start":24,"column_end":32},"kind":{"Impl":{"id":61}},"from":{"krate":20,"index":343},"to":{"krate":0,"index":637}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":217912,"byte_end":217923,"line_start":27,"line_end":27,"column_start":37,"column_end":48},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1041},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219067,"byte_end":219078,"line_start":71,"line_end":71,"column_start":16,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1041},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":219692,"byte_end":219695,"line_start":90,"line_end":90,"column_start":16,"column_end":19},"kind":{"Impl":{"id":64}},"from":{"krate":5,"index":84},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":220916,"byte_end":220922,"line_start":146,"line_end":146,"column_start":16,"column_end":22},"kind":{"Impl":{"id":76}},"from":{"krate":5,"index":4732},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221160,"byte_end":221163,"line_start":158,"line_end":158,"column_start":16,"column_end":19},"kind":{"Impl":{"id":78}},"from":{"krate":5,"index":4064},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221408,"byte_end":221413,"line_start":170,"line_end":170,"column_start":16,"column_end":21},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1109},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221536,"byte_end":221542,"line_start":176,"line_end":176,"column_start":26,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":2,"index":29311},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/to_sql.rs","byte_start":221742,"byte_end":221745,"line_start":185,"line_end":185,"column_start":16,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":5,"index":326},"to":{"krate":0,"index":696}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225348,"byte_end":225353,"line_start":21,"line_end":21,"column_start":21,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225437,"byte_end":225442,"line_start":27,"line_end":27,"column_start":21,"column_end":26},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":225540,"byte_end":225545,"line_start":33,"line_end":33,"column_start":22,"column_end":27},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226494,"byte_end":226499,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226587,"byte_end":226592,"line_start":81,"line_end":81,"column_start":20,"column_end":25},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226680,"byte_end":226685,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226777,"byte_end":226782,"line_start":93,"line_end":93,"column_start":24,"column_end":29},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":226880,"byte_end":226885,"line_start":99,"line_end":99,"column_start":29,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value.rs","byte_start":227059,"byte_end":227064,"line_start":111,"line_end":111,"column_start":6,"column_end":11},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":227995,"byte_end":228003,"line_start":22,"line_end":22,"column_start":6,"column_end":14},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":228326,"byte_end":228334,"line_start":34,"line_end":34,"column_start":10,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":229677,"byte_end":229682,"line_start":74,"line_end":74,"column_start":29,"column_end":34},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1109},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230172,"byte_end":230180,"line_start":89,"line_end":89,"column_start":28,"column_end":36},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230300,"byte_end":230308,"line_start":95,"line_end":95,"column_start":29,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230419,"byte_end":230427,"line_start":101,"line_end":101,"column_start":30,"column_end":38},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/value_ref.rs","byte_start":230820,"byte_end":230828,"line_start":113,"line_end":113,"column_start":33,"column_end":41},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":1807}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/types/mod.rs","byte_start":197262,"byte_end":197266,"line_start":94,"line_end":94,"column_start":23,"column_end":27},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1179},"to":{"krate":2,"index":5983}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":6068,"byte_end":6074,"line_start":219,"line_end":219,"column_start":34,"column_end":40},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":790},"to":{"krate":0,"index":792}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":8566,"byte_end":8578,"line_start":300,"line_end":300,"column_start":6,"column_end":18},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9037,"byte_end":9047,"line_start":318,"line_end":318,"column_start":22,"column_end":32},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9066,"byte_end":9076,"line_start":320,"line_end":320,"column_start":15,"column_end":25},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":2076}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":9165,"byte_end":9175,"line_start":326,"line_end":326,"column_start":6,"column_end":16},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":810},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":24116,"byte_end":24126,"line_start":759,"line_end":759,"column_start":21,"column_end":31},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":810},"to":{"krate":2,"index":5978}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":25127,"byte_end":25136,"line_start":784,"line_end":784,"column_start":18,"column_end":27},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1211},"to":{"krate":2,"index":1874}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27263,"byte_end":27278,"line_start":836,"line_end":836,"column_start":22,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":1883}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27303,"byte_end":27318,"line_start":837,"line_end":837,"column_start":22,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":864},"to":{"krate":2,"index":1895}},{"span":{"file_name":"/home/kazakov/.cargo/registry/src/github.com-1ecc6299db9ec823/rusqlite-0.21.0/src/lib.rs","byte_start":27328,"byte_end":27343,"line_start":839,"line_end":839,"column_start":6,"column_end":21},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":864},"to":{"krate":4294967295,"index":4294967295}}]}